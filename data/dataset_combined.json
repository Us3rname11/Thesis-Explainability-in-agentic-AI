[
    {
      "my_id": 1001,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "transcribe_meeting_audio",
          "arguments": [
            {
              "name": "audio_file",
              "type": "string",
              "desc": "Path or filename of the meeting audio"
            },
            {
              "name": "language",
              "type": "string",
              "desc": "Language code for transcription"
            }
          ]
        }
      ],
      "instruction": "Please transcribe the attached sales call audio 'recording_salescall_2025-08-20.mp3' into English text.",
      "tool_steps": [
        "Step 1: Call transcribe_meeting_audio with audio_file 'recording_salescall_2025-08-20.mp3' and language 'en-US'."
      ],
      "tool_nodes": [
        {
          "task": "transcribe_meeting_audio",
          "arguments": [
            {
              "name": "audio_file",
              "value": "recording_salescall_2025-08-20.mp3"
            },
            {
              "name": "language",
              "value": "en-US"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1002,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "transcribe_meeting_audio",
          "arguments": [
            {
              "name": "audio_file",
              "type": "string",
              "desc": "Path or filename of the meeting audio"
            },
            {
              "name": "language",
              "type": "string",
              "desc": "Language code for transcription"
            }
          ]
        }
      ],
      "instruction": "Transcribe the Team Sync meeting audio 'team_sync_aug25.wav' and return timestamps for speaker turns.",
      "tool_steps": [
        "Step 1: Call transcribe_meeting_audio with audio_file 'team_sync_aug25.wav' and language 'en-GB' (request timestamps)."
      ],
      "tool_nodes": [
        {
          "task": "transcribe_meeting_audio",
          "arguments": [
            {
              "name": "audio_file",
              "value": "team_sync_aug25.wav"
            },
            {
              "name": "language",
              "value": "en-GB"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1003,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "transcribe_meeting_audio",
          "arguments": [
            {
              "name": "audio_file",
              "type": "string",
              "desc": "Path or filename of the meeting audio"
            },
            {
              "name": "language",
              "type": "string",
              "desc": "Language code for transcription"
            }
          ]
        }
      ],
      "instruction": "I have a Spanish onboarding call 'client_onboard_2025-09-02.m4a' â€” please transcribe it to text.",
      "tool_steps": [
        "Step 1: Initiate transcribe_meeting_audio with 'client_onboard_2025-09-02.m4a' and language 'es-ES'."
      ],
      "tool_nodes": [
        {
          "task": "transcribe_meeting_audio",
          "arguments": [
            {
              "name": "audio_file",
              "value": "client_onboard_2025-09-02.m4a"
            },
            {
              "name": "language",
              "value": "es-ES"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1004,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "generate_meeting_summary",
          "arguments": [
            {
              "name": "meeting_id",
              "type": "string",
              "desc": "Identifier for the meeting or transcript"
            },
            {
              "name": "summary_level",
              "type": "string",
              "desc": "Brief or detailed summary preference"
            }
          ]
        }
      ],
      "instruction": "Generate a brief summary of meeting 'meet_2025_09_01_sales' focusing on key decisions.",
      "tool_steps": [
        "Step 1: Fetch meeting 'meet_2025_09_01_sales' then produce a brief summary highlighting decisions."
      ],
      "tool_nodes": [
        {
          "task": "generate_meeting_summary",
          "arguments": [
            {
              "name": "meeting_id",
              "value": "meet_2025_09_01_sales"
            },
            {
              "name": "summary_level",
              "value": "brief"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1005,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "generate_meeting_summary",
          "arguments": [
            {
              "name": "meeting_id",
              "type": "string",
              "desc": "Identifier for the meeting or transcript"
            },
            {
              "name": "summary_level",
              "type": "string",
              "desc": "Brief or detailed summary preference"
            }
          ]
        }
      ],
      "instruction": "Please create a detailed summary (including action items) for 'engineering_standup_2025-09-03'.",
      "tool_steps": [
        "Step 1: Retrieve transcript for 'engineering_standup_2025-09-03'. Step 2: Produce a detailed summary with action items."
      ],
      "tool_nodes": [
        {
          "task": "generate_meeting_summary",
          "arguments": [
            {
              "name": "meeting_id",
              "value": "engineering_standup_2025-09-03"
            },
            {
              "name": "summary_level",
              "value": "detailed"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1006,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "generate_meeting_summary",
          "arguments": [
            {
              "name": "meeting_id",
              "type": "string",
              "desc": "Identifier for the meeting or transcript"
            },
            {
              "name": "summary_level",
              "type": "string",
              "desc": "Brief or detailed summary preference"
            }
          ]
        }
      ],
      "instruction": "Summarize the Q3 all-hands 'allhands_q3_2025' into a short summary suitable for the company newsletter.",
      "tool_steps": [
        "Step 1: Load 'allhands_q3_2025' transcript. Step 2: Produce a short summary tailored for a newsletter."
      ],
      "tool_nodes": [
        {
          "task": "generate_meeting_summary",
          "arguments": [
            {
              "name": "meeting_id",
              "value": "allhands_q3_2025"
            },
            {
              "name": "summary_level",
              "value": "brief"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1007,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "manage_crm_contact",
          "arguments": [
            {
              "name": "contact_id",
              "type": "string",
              "desc": "CRM contact identifier (or 'new' to create)"
            },
            {
              "name": "operation",
              "type": "string",
              "desc": "Operation to perform: create/update/delete"
            }
          ]
        }
      ],
      "instruction": "Create a new CRM contact for 'Jordan Lee' with email jordan.lee@example.com and assign to Sales.",
      "tool_steps": [
        "Step 1: Call manage_crm_contact with contact_id 'new' and operation 'create'. Step 2: Provide contact fields (name, email, owner)."
      ],
      "tool_nodes": [
        {
          "task": "manage_crm_contact",
          "arguments": [
            {
              "name": "contact_id",
              "value": "new"
            },
            {
              "name": "operation",
              "value": "create"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1008,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "manage_crm_contact",
          "arguments": [
            {
              "name": "contact_id",
              "type": "string",
              "desc": "CRM contact identifier (or 'new' to create)"
            },
            {
              "name": "operation",
              "type": "string",
              "desc": "Operation to perform: create/update/delete"
            }
          ]
        }
      ],
      "instruction": "Update CRM contact 'C-4592' to change the phone number to '+44 7700 900123'.",
      "tool_steps": [
        "Step 1: Run manage_crm_contact with contact_id 'C-4592' and operation 'update' specifying the phone field."
      ],
      "tool_nodes": [
        {
          "task": "manage_crm_contact",
          "arguments": [
            {
              "name": "contact_id",
              "value": "C-4592"
            },
            {
              "name": "operation",
              "value": "update"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1009,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "manage_crm_contact",
          "arguments": [
            {
              "name": "contact_id",
              "type": "string",
              "desc": "CRM contact identifier (or 'new' to create)"
            },
            {
              "name": "operation",
              "type": "string",
              "desc": "Operation to perform: create/update/delete"
            }
          ]
        }
      ],
      "instruction": "Please delete CRM contact 'C-2101' â€” they are no longer with the company.",
      "tool_steps": [
        "Step 1: Execute manage_crm_contact with contact_id 'C-2101' and operation 'delete'."
      ],
      "tool_nodes": [
        {
          "task": "manage_crm_contact",
          "arguments": [
            {
              "name": "contact_id",
              "value": "C-2101"
            },
            {
              "name": "operation",
              "value": "delete"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1010,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "track_project_progress",
          "arguments": [
            {
              "name": "project_id",
              "type": "string",
              "desc": "Project identifier"
            },
            {
              "name": "as_of_date",
              "type": "date",
              "desc": "Date to report progress for"
            }
          ]
        }
      ],
      "instruction": "Provide project progress for 'project_alpha' as of 2025-08-31, including percent complete and blockers.",
      "tool_steps": [
        "Step 1: Query progress data for 'project_alpha' as of '2025-08-31'. Step 2: Return percent complete and blockers."
      ],
      "tool_nodes": [
        {
          "task": "track_project_progress",
          "arguments": [
            {
              "name": "project_id",
              "value": "project_alpha"
            },
            {
              "name": "as_of_date",
              "value": "2025-08-31"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1011,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "track_project_progress",
          "arguments": [
            {
              "name": "project_id",
              "type": "string",
              "desc": "Project identifier"
            },
            {
              "name": "as_of_date",
              "type": "date",
              "desc": "Date to report progress for"
            }
          ]
        }
      ],
      "instruction": "Track the current status of 'website_redesign' up to 2025-09-07 and list pending tasks.",
      "tool_steps": [
        "Step 1: Collect updates for 'website_redesign' through '2025-09-07'. Step 2: List pending tasks and owners."
      ],
      "tool_nodes": [
        {
          "task": "track_project_progress",
          "arguments": [
            {
              "name": "project_id",
              "value": "website_redesign"
            },
            {
              "name": "as_of_date",
              "value": "2025-09-07"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1012,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "track_project_progress",
          "arguments": [
            {
              "name": "project_id",
              "type": "string",
              "desc": "Project identifier"
            },
            {
              "name": "as_of_date",
              "type": "date",
              "desc": "Date to report progress for"
            }
          ]
        }
      ],
      "instruction": "Give a progress snapshot for 'migration_db_v2' as of 2025-09-09 and estimate completion date.",
      "tool_steps": [
        "Step 1: Retrieve metrics for 'migration_db_v2' as of '2025-09-09'. Step 2: Produce snapshot and estimated completion."
      ],
      "tool_nodes": [
        {
          "task": "track_project_progress",
          "arguments": [
            {
              "name": "project_id",
              "value": "migration_db_v2"
            },
            {
              "name": "as_of_date",
              "value": "2025-09-09"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1013,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "create_team_poll",
          "arguments": [
            {
              "name": "question",
              "type": "string",
              "desc": "Poll question to ask the team"
            },
            {
              "name": "options",
              "type": "list",
              "desc": "List of poll options"
            }
          ]
        }
      ],
      "instruction": "Create a team poll asking 'Preferred Q4 kickoff date?' with options Oct 6, Oct 13 and Oct 20.",
      "tool_steps": [
        "Step 1: Initialize create_team_poll with question 'Preferred Q4 kickoff date?' and the three options."
      ],
      "tool_nodes": [
        {
          "task": "create_team_poll",
          "arguments": [
            {
              "name": "question",
              "value": "Preferred Q4 kickoff date?"
            },
            {
              "name": "options",
              "value": [
                "Oct 6",
                "Oct 13",
                "Oct 20"
              ]
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1014,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "create_team_poll",
          "arguments": [
            {
              "name": "question",
              "type": "string",
              "desc": "Poll question to ask the team"
            },
            {
              "name": "options",
              "type": "list",
              "desc": "List of poll options"
            }
          ]
        }
      ],
      "instruction": "Set up a poll 'Choose lunch preference for team offsite' with Vegetarian, Meat, Vegan, No preference.",
      "tool_steps": [
        "Step 1: Call create_team_poll with the question and options list."
      ],
      "tool_nodes": [
        {
          "task": "create_team_poll",
          "arguments": [
            {
              "name": "question",
              "value": "Choose lunch preference for team offsite"
            },
            {
              "name": "options",
              "value": [
                "Vegetarian",
                "Meat",
                "Vegan",
                "No preference"
              ]
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1015,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "create_team_poll",
          "arguments": [
            {
              "name": "question",
              "type": "string",
              "desc": "Poll question to ask the team"
            },
            {
              "name": "options",
              "type": "list",
              "desc": "List of poll options"
            }
          ]
        }
      ],
      "instruction": "Please create a quick poll: 'Do you prefer morning or afternoon workshops?' for the product team.",
      "tool_steps": [
        "Step 1: Use create_team_poll to create the two-option poll for the product team."
      ],
      "tool_nodes": [
        {
          "task": "create_team_poll",
          "arguments": [
            {
              "name": "question",
              "value": "Do you prefer morning or afternoon workshops?"
            },
            {
              "name": "options",
              "value": [
                "Morning",
                "Afternoon"
              ]
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1016,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "schedule_follow_up_communication",
          "arguments": [
            {
              "name": "contact_id",
              "type": "string",
              "desc": "Contact identifier to follow up with"
            },
            {
              "name": "date_time",
              "type": "string",
              "desc": "Date and time to schedule follow-up (ISO 8601)"
            }
          ]
        }
      ],
      "instruction": "Schedule a follow-up call with contact 'C-7890' on 2025-09-15 at 10:00 UTC.",
      "tool_steps": [
        "Step 1: Schedule follow-up for 'C-7890' at '2025-09-15T10:00:00Z' using schedule_follow_up_communication."
      ],
      "tool_nodes": [
        {
          "task": "schedule_follow_up_communication",
          "arguments": [
            {
              "name": "contact_id",
              "value": "C-7890"
            },
            {
              "name": "date_time",
              "value": "2025-09-15T10:00:00Z"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1017,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "schedule_follow_up_communication",
          "arguments": [
            {
              "name": "contact_id",
              "type": "string",
              "desc": "Contact identifier to follow up with"
            },
            {
              "name": "date_time",
              "type": "string",
              "desc": "Date and time to schedule follow-up (ISO 8601)"
            }
          ]
        }
      ],
      "instruction": "Please arrange a follow-up email to 'lead_1122' to be sent on 2025-09-17 at 14:30 UTC.",
      "tool_steps": [
        "Step 1: Configure schedule_follow_up_communication for 'lead_1122' at '2025-09-17T14:30:00Z' (email)."
      ],
      "tool_nodes": [
        {
          "task": "schedule_follow_up_communication",
          "arguments": [
            {
              "name": "contact_id",
              "value": "lead_1122"
            },
            {
              "name": "date_time",
              "value": "2025-09-17T14:30:00Z"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1018,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "log_work_hours",
          "arguments": [
            {
              "name": "employee_id",
              "type": "string",
              "desc": "Identifier for the employee"
            },
            {
              "name": "hours",
              "type": "float",
              "desc": "Number of hours worked"
            }
          ]
        }
      ],
      "instruction": "Log 7.5 hours for employee 'E-3344' on 2025-09-08 for project 'project_alpha'.",
      "tool_steps": [
        "Step 1: Call log_work_hours with employee_id 'E-3344' and hours 7.5 (attach project metadata)."
      ],
      "tool_nodes": [
        {
          "task": "log_work_hours",
          "arguments": [
            {
              "name": "employee_id",
              "value": "E-3344"
            },
            {
              "name": "hours",
              "value": 7.5
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1019,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "log_work_hours",
          "arguments": [
            {
              "name": "employee_id",
              "type": "string",
              "desc": "Identifier for the employee"
            },
            {
              "name": "hours",
              "type": "float",
              "desc": "Number of hours worked"
            }
          ]
        }
      ],
      "instruction": "Record 4.0 hours for 'E-2201' for today's support shift.",
      "tool_steps": [
        "Step 1: Execute log_work_hours with employee_id 'E-2201' and hours 4.0."
      ],
      "tool_nodes": [
        {
          "task": "log_work_hours",
          "arguments": [
            {
              "name": "employee_id",
              "value": "E-2201"
            },
            {
              "name": "hours",
              "value": 4.0
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1020,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "query_internal_knowledge_base",
          "arguments": [
            {
              "name": "query",
              "type": "string",
              "desc": "Search query or question"
            },
            {
              "name": "department",
              "type": "string",
              "desc": "Department knowledge base to search"
            }
          ]
        }
      ],
      "instruction": "Search the CloudOps knowledge base: 'How to onboard a new GCP project' and return the top procedures.",
      "tool_steps": [
        "Step 1: Query internal KB 'CloudOps' with the phrase 'How to onboard a new GCP project'. Step 2: Return top procedures."
      ],
      "tool_nodes": [
        {
          "task": "query_internal_knowledge_base",
          "arguments": [
            {
              "name": "query",
              "value": "How to onboard a new GCP project"
            },
            {
              "name": "department",
              "value": "CloudOps"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1021,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "query_internal_knowledge_base",
          "arguments": [
            {
              "name": "query",
              "type": "string",
              "desc": "Search query or question"
            },
            {
              "name": "department",
              "type": "string",
              "desc": "Department knowledge base to search"
            }
          ]
        }
      ],
      "instruction": "Retrieve the current expense approval thresholds from the Finance knowledge base (2025 policy).",
      "tool_steps": [
        "Step 1: Query 'Finance' KB for 'Expense approval thresholds 2025'. Step 2: Return the relevant policy sections."
      ],
      "tool_nodes": [
        {
          "task": "query_internal_knowledge_base",
          "arguments": [
            {
              "name": "query",
              "value": "Expense approval thresholds 2025"
            },
            {
              "name": "department",
              "value": "Finance"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1022,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "initiate_code_repository",
          "arguments": [
            {
              "name": "repo_name",
              "type": "string",
              "desc": "Name for the new repository"
            },
            {
              "name": "visibility",
              "type": "string",
              "desc": "Repository visibility: public or private"
            }
          ]
        }
      ],
      "instruction": "Create a new private repository named 'feature/iam-refactor' and initialize with a README.",
      "tool_steps": [
        "Step 1: Call initiate_code_repository with repo_name 'feature/iam-refactor' and visibility 'private'. Step 2: Initialize README."
      ],
      "tool_nodes": [
        {
          "task": "initiate_code_repository",
          "arguments": [
            {
              "name": "repo_name",
              "value": "feature/iam-refactor"
            },
            {
              "name": "visibility",
              "value": "private"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
      "my_id": 1023,
      "n_tools": 1,
      "sampled_nodes": [
        {
          "task": "initiate_code_repository",
          "arguments": [
            {
              "name": "repo_name",
              "type": "string",
              "desc": "Name for the new repository"
            },
            {
              "name": "visibility",
              "type": "string",
              "desc": "Repository visibility: public or private"
            }
          ]
        }
      ],
      "instruction": "Please create a public repository 'infra/terraform-modules' and add a CONTRIBUTING.md template.",
      "tool_steps": [
        "Step 1: Run initiate_code_repository for 'infra/terraform-modules' with visibility 'public'. Step 2: Add CONTRIBUTING.md."
      ],
      "tool_nodes": [
        {
          "task": "initiate_code_repository",
          "arguments": [
            {
              "name": "repo_name",
              "value": "infra/terraform-modules"
            },
            {
              "name": "visibility",
              "value": "public"
            }
          ]
        }
      ],
      "category": "business_and_productivity",
      "synthetic": true
    },
    {
        "my_id": 1024,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "check_flight_status",
            "arguments": [
            {
                "name": "flight_number",
                "type": "string",
                "desc": "Airline code and flight number"
            },
            {
                "name": "date",
                "type": "date",
                "desc": "Date of the flight (YYYY-MM-DD)"
            }
            ]
        }
        ],
        "instruction": "What's the current status of flight AA123 on 2025-09-12?",
        "tool_steps": [
        "Step 1: Query check_flight_status with flight_number 'AA123' and date '2025-09-12'."
        ],
        "tool_nodes": [
        {
            "task": "check_flight_status",
            "arguments": [
            {
                "name": "flight_number",
                "value": "AA123"
            },
            {
                "name": "date",
                "value": "2025-09-12"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1025,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "check_flight_status",
            "arguments": [
            {
                "name": "flight_number",
                "type": "string",
                "desc": "Airline code and flight number"
            },
            {
                "name": "date",
                "type": "date",
                "desc": "Date of the flight (YYYY-MM-DD)"
            }
            ]
        }
        ],
        "instruction": "Check status for Lufthansa flight LH456 scheduled for 2025-09-15.",
        "tool_steps": [
        "Step 1: Call check_flight_status for 'LH456' on '2025-09-15'."
        ],
        "tool_nodes": [
        {
            "task": "check_flight_status",
            "arguments": [
            {
                "name": "flight_number",
                "value": "LH456"
            },
            {
                "name": "date",
                "value": "2025-09-15"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1026,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "check_flight_status",
            "arguments": [
            {
                "name": "flight_number",
                "type": "string",
                "desc": "Airline code and flight number"
            },
            {
                "name": "date",
                "type": "date",
                "desc": "Date of the flight (YYYY-MM-DD)"
            }
            ]
        }
        ],
        "instruction": "Please provide the status of flight BA789 for today (2025-09-10).",
        "tool_steps": [
        "Step 1: Request check_flight_status for 'BA789' with today's date '2025-09-10'."
        ],
        "tool_nodes": [
        {
            "task": "check_flight_status",
            "arguments": [
            {
                "name": "flight_number",
                "value": "BA789"
            },
            {
                "name": "date",
                "value": "2025-09-10"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1027,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "find_nearby_electric_vehicle_charger",
            "arguments": [
            {
                "name": "location",
                "type": "string",
                "desc": "User location or address"
            },
            {
                "name": "radius_km",
                "type": "float",
                "desc": "Search radius in kilometers"
            }
            ]
        }
        ],
        "instruction": "Find EV chargers near '101 Main St, Berlin' within 5 km.",
        "tool_steps": [
        "Step 1: Run find_nearby_electric_vehicle_charger with location '101 Main St, Berlin' and radius_km 5."
        ],
        "tool_nodes": [
        {
            "task": "find_nearby_electric_vehicle_charger",
            "arguments": [
            {
                "name": "location",
                "value": "101 Main St, Berlin"
            },
            {
                "name": "radius_km",
                "value": 5.0
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1028,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "find_nearby_electric_vehicle_charger",
            "arguments": [
            {
                "name": "location",
                "type": "string",
                "desc": "User location or address"
            },
            {
                "name": "radius_km",
                "type": "float",
                "desc": "Search radius in kilometers"
            }
            ]
        }
        ],
        "instruction": "Locate chargers around 'Amsterdam Centraal' within 2 km and show fast-charging stations first.",
        "tool_steps": [
        "Step 1: Query chargers for 'Amsterdam Centraal' with radius_km 2 and prioritize fast chargers."
        ],
        "tool_nodes": [
        {
            "task": "find_nearby_electric_vehicle_charger",
            "arguments": [
            {
                "name": "location",
                "value": "Amsterdam Centraal"
            },
            {
                "name": "radius_km",
                "value": 2.0
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1029,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "find_nearby_electric_vehicle_charger",
            "arguments": [
            {
                "name": "location",
                "type": "string",
                "desc": "User location or address"
            },
            {
                "name": "radius_km",
                "type": "float",
                "desc": "Search radius in kilometers"
            }
            ]
        }
        ],
        "instruction": "I need charging options near 'Sagrada Familia, Barcelona' within 3 km.",
        "tool_steps": [
        "Step 1: Search find_nearby_electric_vehicle_charger for 'Sagrada Familia, Barcelona' radius 3 km."
        ],
        "tool_nodes": [
        {
            "task": "find_nearby_electric_vehicle_charger",
            "arguments": [
            {
                "name": "location",
                "value": "Sagrada Familia, Barcelona"
            },
            {
                "name": "radius_km",
                "value": 3.0
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1030,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "plan_public_transport_route",
            "arguments": [
            {
                "name": "from",
                "type": "string",
                "desc": "Start address or station"
            },
            {
                "name": "to",
                "type": "string",
                "desc": "Destination address or station"
            }
            ]
        }
        ],
        "instruction": "Plan a route from 'Heathrow Terminal 5' to 'King's Cross St Pancras' arriving by 2025-09-12 15:00.",
        "tool_steps": [
        "Step 1: Use plan_public_transport_route with from 'Heathrow Terminal 5' to 'King's Cross St Pancras' and arrival constraint."
        ],
        "tool_nodes": [
        {
            "task": "plan_public_transport_route",
            "arguments": [
            {
                "name": "from",
                "value": "Heathrow Terminal 5"
            },
            {
                "name": "to",
                "value": "King's Cross St Pancras"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1031,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "plan_public_transport_route",
            "arguments": [
            {
                "name": "from",
                "type": "string",
                "desc": "Start address or station"
            },
            {
                "name": "to",
                "type": "string",
                "desc": "Destination address or station"
            }
            ]
        }
        ],
        "instruction": "How do I get from 'Central Station, Munich' to 'Allianz Arena' using public transport?",
        "tool_steps": [
        "Step 1: Query routes from 'Central Station, Munich' to 'Allianz Arena' with public transport options."
        ],
        "tool_nodes": [
        {
            "task": "plan_public_transport_route",
            "arguments": [
            {
                "name": "from",
                "value": "Central Station, Munich"
            },
            {
                "name": "to",
                "value": "Allianz Arena"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1032,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "plan_public_transport_route",
            "arguments": [
            {
                "name": "from",
                "type": "string",
                "desc": "Start address or station"
            },
            {
                "name": "to",
                "type": "string",
                "desc": "Destination address or station"
            }
            ]
        }
        ],
        "instruction": "Find the fastest public transit route from 'Downtown Lisbon' to 'BelÃ©m Tower' tomorrow morning.",
        "tool_steps": [
        "Step 1: Plan public transport from 'Downtown Lisbon' to 'BelÃ©m Tower' for tomorrow morning."
        ],
        "tool_nodes": [
        {
            "task": "plan_public_transport_route",
            "arguments": [
            {
                "name": "from",
                "value": "Downtown Lisbon"
            },
            {
                "name": "to",
                "value": "BelÃ©m Tower"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1033,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "add_item_to_trip_itinerary",
            "arguments": [
            {
                "name": "trip_id",
                "type": "string",
                "desc": "Identifier for the trip itinerary"
            },
            {
                "name": "item",
                "type": "string",
                "desc": "Item to add (flight, hotel, activity)"
            }
            ]
        }
        ],
        "instruction": "Add flight 'KL045' on 2025-10-01 from AMS to JFK to my trip 'trip_september'.",
        "tool_steps": [
        "Step 1: Call add_item_to_trip_itinerary with trip_id 'trip_september' and item details 'Flight KL045 2025-10-01 AMS->JFK'."
        ],
        "tool_nodes": [
        {
            "task": "add_item_to_trip_itinerary",
            "arguments": [
            {
                "name": "trip_id",
                "value": "trip_september"
            },
            {
                "name": "item",
                "value": "Flight KL045 2025-10-01 AMS->JFK"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1034,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "add_item_to_trip_itinerary",
            "arguments": [
            {
                "name": "trip_id",
                "type": "string",
                "desc": "Identifier for the trip itinerary"
            },
            {
                "name": "item",
                "type": "string",
                "desc": "Item to add (flight, hotel, activity)"
            }
            ]
        }
        ],
        "instruction": "Please add hotel 'Hotel Roma Grand' check-in 2025-11-05 to trip 'europe_tour'.",
        "tool_steps": [
        "Step 1: Execute add_item_to_trip_itinerary for 'europe_tour' adding hotel reservation details."
        ],
        "tool_nodes": [
        {
            "task": "add_item_to_trip_itinerary",
            "arguments": [
            {
                "name": "trip_id",
                "value": "europe_tour"
            },
            {
                "name": "item",
                "value": "Hotel Roma Grand check-in 2025-11-05"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1035,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "add_item_to_trip_itinerary",
            "arguments": [
            {
                "name": "trip_id",
                "type": "string",
                "desc": "Identifier for the trip itinerary"
            },
            {
                "name": "item",
                "type": "string",
                "desc": "Item to add (flight, hotel, activity)"
            }
            ]
        }
        ],
        "instruction": "Add activity 'Vatican Museums tour' on 2025-11-06 to 'rome_weekend' itinerary.",
        "tool_steps": [
        "Step 1: Use add_item_to_trip_itinerary to append 'Vatican Museums tour 2025-11-06' to 'rome_weekend'."
        ],
        "tool_nodes": [
        {
            "task": "add_item_to_trip_itinerary",
            "arguments": [
            {
                "name": "trip_id",
                "value": "rome_weekend"
            },
            {
                "name": "item",
                "value": "Vatican Museums tour 2025-11-06"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1036,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "find_travel_visa_requirements",
            "arguments": [
            {
                "name": "nationality",
                "type": "string",
                "desc": "Traveler's nationality"
            },
            {
                "name": "destination",
                "type": "string",
                "desc": "Destination country or region"
            }
            ]
        }
        ],
        "instruction": "Do US citizens need a visa to enter Japan for tourism (arrival 2025-12-01)?",
        "tool_steps": [
        "Step 1: Query visa rules for nationality 'US' entering 'Japan' on '2025-12-01'."
        ],
        "tool_nodes": [
        {
            "task": "find_travel_visa_requirements",
            "arguments": [
            {
                "name": "nationality",
                "value": "US"
            },
            {
                "name": "destination",
                "value": "Japan"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1037,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "find_travel_visa_requirements",
            "arguments": [
            {
                "name": "nationality",
                "type": "string",
                "desc": "Traveler's nationality"
            },
            {
                "name": "destination",
                "type": "string",
                "desc": "Destination country or region"
            }
            ]
        }
        ],
        "instruction": "Check visa requirements for Indian passport holders traveling to the UK for work.",
        "tool_steps": [
        "Step 1: Search find_travel_visa_requirements for nationality 'IN' and destination 'UK' with purpose 'work'."
        ],
        "tool_nodes": [
        {
            "task": "find_travel_visa_requirements",
            "arguments": [
            {
                "name": "nationality",
                "value": "IN"
            },
            {
                "name": "destination",
                "value": "UK"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1038,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "find_travel_visa_requirements",
            "arguments": [
            {
                "name": "nationality",
                "type": "string",
                "desc": "Traveler's nationality"
            },
            {
                "name": "destination",
                "type": "string",
                "desc": "Destination country or region"
            }
            ]
        }
        ],
        "instruction": "Tell me whether Canadian citizens need an eTA for short visits to Brazil.",
        "tool_steps": [
        "Step 1: Look up visa/eTA rules for nationality 'CA' and destination 'Brazil'."
        ],
        "tool_nodes": [
        {
            "task": "find_travel_visa_requirements",
            "arguments": [
            {
                "name": "nationality",
                "value": "CA"
            },
            {
                "name": "destination",
                "value": "Brazil"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1039,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "get_real_time_traffic_update",
            "arguments": [
            {
                "name": "route",
                "type": "string",
                "desc": "Route or road name"
            },
            {
                "name": "time",
                "type": "string",
                "desc": "Time to get update for (ISO datetime)"
            }
            ]
        }
        ],
        "instruction": "What's the current traffic like on A1 between Berlin and Hamburg right now (2025-09-10T09:30:00+02:00)?",
        "tool_steps": [
        "Step 1: Request get_real_time_traffic_update for route 'A1 Berlin-Hamburg' at given timestamp."
        ],
        "tool_nodes": [
        {
            "task": "get_real_time_traffic_update",
            "arguments": [
            {
                "name": "route",
                "value": "A1 Berlin-Hamburg"
            },
            {
                "name": "time",
                "value": "2025-09-10T09:30:00+02:00"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1040,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "get_real_time_traffic_update",
            "arguments": [
            {
                "name": "route",
                "type": "string",
                "desc": "Route or road name"
            },
            {
                "name": "time",
                "type": "string",
                "desc": "Time to get update for (ISO datetime)"
            }
            ]
        }
        ],
        "instruction": "Provide traffic updates for 'I-405, Los Angeles' for 2025-09-11T17:00:00-07:00.",
        "tool_steps": [
        "Step 1: Pull traffic data for 'I-405, Los Angeles' at '2025-09-11T17:00:00-07:00'."
        ],
        "tool_nodes": [
        {
            "task": "get_real_time_traffic_update",
            "arguments": [
            {
                "name": "route",
                "value": "I-405 Los Angeles"
            },
            {
                "name": "time",
                "value": "2025-09-11T17:00:00-07:00"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1041,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "get_real_time_traffic_update",
            "arguments": [
            {
                "name": "route",
                "type": "string",
                "desc": "Route or road name"
            },
            {
                "name": "time",
                "type": "string",
                "desc": "Time to get update for (ISO datetime)"
            }
            ]
        }
        ],
        "instruction": "Check congestion on 'M25 London' this evening (2025-09-10T19:00:00+01:00).",
        "tool_steps": [
        "Step 1: Query current congestion levels on 'M25 London' for the requested time."
        ],
        "tool_nodes": [
        {
            "task": "get_real_time_traffic_update",
            "arguments": [
            {
                "name": "route",
                "value": "M25 London"
            },
            {
                "name": "time",
                "value": "2025-09-10T19:00:00+01:00"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1042,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "compare_rental_car_prices",
            "arguments": [
            {
                "name": "pickup_location",
                "type": "string",
                "desc": "Where to pick up the rental car"
            },
            {
                "name": "dates",
                "type": "string",
                "desc": "Pickup and drop-off dates (range)"
            }
            ]
        }
        ],
        "instruction": "Compare rental car prices for 'Paris CDG Airport' from 2025-10-05 to 2025-10-12.",
        "tool_steps": [
        "Step 1: Run compare_rental_car_prices for pickup_location 'Paris CDG Airport' and dates '2025-10-05 to 2025-10-12'."
        ],
        "tool_nodes": [
        {
            "task": "compare_rental_car_prices",
            "arguments": [
            {
                "name": "pickup_location",
                "value": "Paris CDG Airport"
            },
            {
                "name": "dates",
                "value": "2025-10-05 to 2025-10-12"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1043,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "compare_rental_car_prices",
            "arguments": [
            {
                "name": "pickup_location",
                "type": "string",
                "desc": "Where to pick up the rental car"
            },
            {
                "name": "dates",
                "type": "string",
                "desc": "Pickup and drop-off dates (range)"
            }
            ]
        }
        ],
        "instruction": "Show cheapest rental options in 'San Francisco Downtown' for weekend 2025-09-20 to 2025-09-22.",
        "tool_steps": [
        "Step 1: Query compare_rental_car_prices for 'San Francisco Downtown' between '2025-09-20' and '2025-09-22'."
        ],
        "tool_nodes": [
        {
            "task": "compare_rental_car_prices",
            "arguments": [
            {
                "name": "pickup_location",
                "value": "San Francisco Downtown"
            },
            {
                "name": "dates",
                "value": "2025-09-20 to 2025-09-22"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1044,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "book_train_ticket",
            "arguments": [
            {
                "name": "route",
                "type": "string",
                "desc": "Train route or stations"
            },
            {
                "name": "date_time",
                "type": "string",
                "desc": "Date and time of departure (ISO)"
            }
            ]
        }
        ],
        "instruction": "Book a train ticket from 'Paris Gare de Lyon' to 'Lyon Part-Dieu' on 2025-10-02 at 09:00.",
        "tool_steps": [
        "Step 1: Initiate book_train_ticket for route 'Paris Gare de Lyon -> Lyon Part-Dieu' at '2025-10-02T09:00'."
        ],
        "tool_nodes": [
        {
            "task": "book_train_ticket",
            "arguments": [
            {
                "name": "route",
                "value": "Paris Gare de Lyon -> Lyon Part-Dieu"
            },
            {
                "name": "date_time",
                "value": "2025-10-02T09:00"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1045,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "book_train_ticket",
            "arguments": [
            {
                "name": "route",
                "type": "string",
                "desc": "Train route or stations"
            },
            {
                "name": "date_time",
                "type": "string",
                "desc": "Date and time of departure (ISO)"
            }
            ]
        }
        ],
        "instruction": "Reserve an evening train 'Berlin Hbf' to 'Munich Hbf' on 2025-12-15 departing 18:30.",
        "tool_steps": [
        "Step 1: Call book_train_ticket for 'Berlin Hbf -> Munich Hbf' on '2025-12-15T18:30'."
        ],
        "tool_nodes": [
        {
            "task": "book_train_ticket",
            "arguments": [
            {
                "name": "route",
                "value": "Berlin Hbf -> Munich Hbf"
            },
            {
                "name": "date_time",
                "value": "2025-12-15T18:30"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1046,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "find_airport_lounge_access",
            "arguments": [
            {
                "name": "airport_code",
                "type": "string",
                "desc": "IATA airport code"
            },
            {
                "name": "passenger_tier",
                "type": "string",
                "desc": "Passenger status or access method (e.g., priority pass)"
            }
            ]
        }
        ],
        "instruction": "Find lounges at 'FRA' that I can access with Priority Pass.",
        "tool_steps": [
        "Step 1: Query find_airport_lounge_access for airport_code 'FRA' and passenger_tier 'Priority Pass'."
        ],
        "tool_nodes": [
        {
            "task": "find_airport_lounge_access",
            "arguments": [
            {
                "name": "airport_code",
                "value": "FRA"
            },
            {
                "name": "passenger_tier",
                "value": "Priority Pass"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1047,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "find_airport_lounge_access",
            "arguments": [
            {
                "name": "airport_code",
                "type": "string",
                "desc": "IATA airport code"
            },
            {
                "name": "passenger_tier",
                "type": "string",
                "desc": "Passenger status or access method (e.g., priority pass)"
            }
            ]
        }
        ],
        "instruction": "Which lounges at 'JFK' are available for business class passengers on 2025-09-20?",
        "tool_steps": [
        "Step 1: Search lounges at 'JFK' and filter by access 'business class' for date '2025-09-20'."
        ],
        "tool_nodes": [
        {
            "task": "find_airport_lounge_access",
            "arguments": [
            {
                "name": "airport_code",
                "value": "JFK"
            },
            {
                "name": "passenger_tier",
                "value": "business class"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1048,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "translate_sign_or_menu_with_camera",
            "arguments": [
            {
                "name": "image_id",
                "type": "string",
                "desc": "Reference to captured image or camera stream"
            },
            {
                "name": "target_language",
                "type": "string",
                "desc": "Language code to translate into"
            }
            ]
        }
        ],
        "instruction": "Translate the attached photo of a Spanish menu (image_id 'menu_esp_01') into English.",
        "tool_steps": [
        "Step 1: Send image 'menu_esp_01' to translate_sign_or_menu_with_camera and request translation into 'en'."
        ],
        "tool_nodes": [
        {
            "task": "translate_sign_or_menu_with_camera",
            "arguments": [
            {
                "name": "image_id",
                "value": "menu_esp_01"
            },
            {
                "name": "target_language",
                "value": "en"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1049,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "translate_sign_or_menu_with_camera",
            "arguments": [
            {
                "name": "image_id",
                "type": "string",
                "desc": "Reference to captured image or camera stream"
            },
            {
                "name": "target_language",
                "type": "string",
                "desc": "Language code to translate into"
            }
            ]
        }
        ],
        "instruction": "Use the camera capture 'street_sign_rome_07' to translate the sign text into German.",
        "tool_steps": [
        "Step 1: Call translate_sign_or_menu_with_camera with image_id 'street_sign_rome_07' and target_language 'de'."
        ],
        "tool_nodes": [
        {
            "task": "translate_sign_or_menu_with_camera",
            "arguments": [
            {
                "name": "image_id",
                "value": "street_sign_rome_07"
            },
            {
                "name": "target_language",
                "value": "de"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1050,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "track_luggage",
            "arguments": [
            {
                "name": "tag_number",
                "type": "string",
                "desc": "Airline baggage tag number"
            },
            {
                "name": "flight_number",
                "type": "string",
                "desc": "Associated flight number"
            }
            ]
        }
        ],
        "instruction": "Track baggage with tag 'ABC1234567' on flight 'KL045' arriving to JFK on 2025-10-01.",
        "tool_steps": [
        "Step 1: Use track_luggage with tag_number 'ABC1234567' and flight_number 'KL045' to get current status."
        ],
        "tool_nodes": [
        {
            "task": "track_luggage",
            "arguments": [
            {
                "name": "tag_number",
                "value": "ABC1234567"
            },
            {
                "name": "flight_number",
                "value": "KL045"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1051,
        "n_tools": 1,
        "sampled_nodes": [
        {
            "task": "track_luggage",
            "arguments": [
            {
                "name": "tag_number",
                "type": "string",
                "desc": "Airline baggage tag number"
            },
            {
                "name": "flight_number",
                "type": "string",
                "desc": "Associated flight number"
            }
            ]
        }
        ],
        "instruction": "Check location of my luggage tag 'XY9876543' linked to flight 'LH456'.",
        "tool_steps": [
        "Step 1: Query track_luggage for tag 'XY9876543' and flight 'LH456'."
        ],
        "tool_nodes": [
        {
            "task": "track_luggage",
            "arguments": [
            {
                "name": "tag_number",
                "value": "XY9876543"
            },
            {
                "name": "flight_number",
                "value": "LH456"
            }
            ]
        }
        ],
        "category": "travel_and_transportation",
        "synthetic": true
    },
    {
        "my_id": 1052,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "track_investment_portfolio",
            "arguments": [
              {
                "name": "portfolio_id",
                "type": "string",
                "desc": "Identifier for the investment portfolio"
              },
              {
                "name": "as_of_date",
                "type": "date",
                "desc": "Date for the portfolio snapshot (YYYY-MM-DD)"
              }
            ]
          }
        ],
        "instruction": "Provide a snapshot of my investment portfolio 'pf_2024_growth' as of 2025-09-01 showing current value, P/L, and allocation by asset class.",
        "tool_steps": [
          "Step 1: Retrieve portfolio 'pf_2024_growth' as of 2025-09-01. Step 2: Calculate current total value, profit/loss and asset-class allocations."
        ],
        "tool_nodes": [
          {
            "task": "track_investment_portfolio",
            "arguments": [
              {
                "name": "portfolio_id",
                "value": "pf_2024_growth"
              },
              {
                "name": "as_of_date",
                "value": "2025-09-01"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1053,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "track_investment_portfolio",
            "arguments": [
              {
                "name": "portfolio_id",
                "type": "string",
                "desc": "Identifier for the investment portfolio"
              },
              {
                "name": "as_of_date",
                "type": "date",
                "desc": "Date for the portfolio snapshot (YYYY-MM-DD)"
              }
            ]
          }
        ],
        "instruction": "Show week-over-week performance for portfolio 'retirement_main' ending 2025-09-07 and list the top 3 contributors.",
        "tool_steps": [
          "Step 1: Query 'retirement_main' performance through 2025-09-07. Step 2: Compute week-over-week change and identify top 3 contributors."
        ],
        "tool_nodes": [
          {
            "task": "track_investment_portfolio",
            "arguments": [
              {
                "name": "portfolio_id",
                "value": "retirement_main"
              },
              {
                "name": "as_of_date",
                "value": "2025-09-07"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1054,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "track_investment_portfolio",
            "arguments": [
              {
                "name": "portfolio_id",
                "type": "string",
                "desc": "Identifier for the investment portfolio"
              },
              {
                "name": "as_of_date",
                "type": "date",
                "desc": "Date for the portfolio snapshot (YYYY-MM-DD)"
              }
            ]
          }
        ],
        "instruction": "Generate a risk summary for portfolio 'pf_tech_focus' as of 2025-08-31 including beta and top concentrated holdings.",
        "tool_steps": [
          "Step 1: Retrieve holdings for 'pf_tech_focus' as of 2025-08-31. Step 2: Calculate portfolio beta and highlight concentrated positions."
        ],
        "tool_nodes": [
          {
            "task": "track_investment_portfolio",
            "arguments": [
              {
                "name": "portfolio_id",
                "value": "pf_tech_focus"
              },
              {
                "name": "as_of_date",
                "value": "2025-08-31"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1055,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_stock_quote",
            "arguments": [
              {
                "name": "ticker",
                "type": "string",
                "desc": "Stock ticker symbol"
              },
              {
                "name": "exchange",
                "type": "string",
                "desc": "Exchange code or market (optional)"
              }
            ]
          }
        ],
        "instruction": "Give me the latest quote for AAPL including last price, change, percent change, and market time.",
        "tool_steps": [
          "Step 1: Query get_stock_quote for ticker 'AAPL' on the primary exchange. Step 2: Return last price, absolute change, percent change, and timestamp."
        ],
        "tool_nodes": [
          {
            "task": "get_stock_quote",
            "arguments": [
              {
                "name": "ticker",
                "value": "AAPL"
              },
              {
                "name": "exchange",
                "value": "NASDAQ"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1056,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_stock_quote",
            "arguments": [
              {
                "name": "ticker",
                "type": "string",
                "desc": "Stock ticker symbol"
              },
              {
                "name": "exchange",
                "type": "string",
                "desc": "Exchange code or market (optional)"
              }
            ]
          }
        ],
        "instruction": "Fetch the stock quote for 'TSLA' and include 52-week high/low and volume.",
        "tool_steps": [
          "Step 1: Call get_stock_quote for 'TSLA'. Step 2: Include quote fields plus 52-week high/low and trading volume."
        ],
        "tool_nodes": [
          {
            "task": "get_stock_quote",
            "arguments": [
              {
                "name": "ticker",
                "value": "TSLA"
              },
              {
                "name": "exchange",
                "value": "NASDAQ"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1057,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_stock_quote",
            "arguments": [
              {
                "name": "ticker",
                "type": "string",
                "desc": "Stock ticker symbol"
              },
              {
                "name": "exchange",
                "type": "string",
                "desc": "Exchange code or market (optional)"
              }
            ]
          }
        ],
        "instruction": "What is the current price for 'VOD.L' on the LSE and how much has it moved today?",
        "tool_steps": [
          "Step 1: Query get_stock_quote for ticker 'VOD.L' on LSE. Step 2: Return current price and today's absolute/percent movement."
        ],
        "tool_nodes": [
          {
            "task": "get_stock_quote",
            "arguments": [
              {
                "name": "ticker",
                "value": "VOD.L"
              },
              {
                "name": "exchange",
                "value": "LSE"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1058,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "send_money_to_contact",
            "arguments": [
              {
                "name": "contact_id",
                "type": "string",
                "desc": "Identifier for the contact or recipient"
              },
              {
                "name": "amount",
                "type": "float",
                "desc": "Amount to send in the account currency"
              }
            ]
          }
        ],
        "instruction": "Send 150.00 EUR to contact 'C-7788' for dinner reimbursement and label it 'Team dinner Aug'.",
        "tool_steps": [
          "Step 1: Verify contact 'C-7788'. Step 2: Execute send_money_to_contact with amount 150.00 and include memo 'Team dinner Aug'."
        ],
        "tool_nodes": [
          {
            "task": "send_money_to_contact",
            "arguments": [
              {
                "name": "contact_id",
                "value": "C-7788"
              },
              {
                "name": "amount",
                "value": 150.0
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1059,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "send_money_to_contact",
            "arguments": [
              {
                "name": "contact_id",
                "type": "string",
                "desc": "Identifier for the contact or recipient"
              },
              {
                "name": "amount",
                "type": "float",
                "desc": "Amount to send in the account currency"
              }
            ]
          }
        ],
        "instruction": "Transfer $45.75 to 'friend_anna' to split the taxi fare.",
        "tool_steps": [
          "Step 1: Lookup contact 'friend_anna'. Step 2: Send amount 45.75 USD via send_money_to_contact and note 'taxi split'."
        ],
        "tool_nodes": [
          {
            "task": "send_money_to_contact",
            "arguments": [
              {
                "name": "contact_id",
                "value": "friend_anna"
              },
              {
                "name": "amount",
                "value": 45.75
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1060,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "send_money_to_contact",
            "arguments": [
              {
                "name": "contact_id",
                "type": "string",
                "desc": "Identifier for the contact or recipient"
              },
              {
                "name": "amount",
                "type": "float",
                "desc": "Amount to send in the account currency"
              }
            ]
          }
        ],
        "instruction": "Pay 1,200.00 GBP to contractor 'C-9021' for invoice #452 and tag as 'September payout'.",
        "tool_steps": [
          "Step 1: Confirm contractor 'C-9021'. Step 2: Execute send_money_to_contact of 1200.00 GBP with memo 'invoice #452'."
        ],
        "tool_nodes": [
          {
            "task": "send_money_to_contact",
            "arguments": [
              {
                "name": "contact_id",
                "value": "C-9021"
              },
              {
                "name": "amount",
                "value": 1200.0
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1061,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "analyze_monthly_spending",
            "arguments": [
              {
                "name": "month",
                "type": "string",
                "desc": "Month to analyze in YYYY-MM format"
              },
              {
                "name": "account_id",
                "type": "string",
                "desc": "Account identifier to analyze"
              }
            ]
          }
        ],
        "instruction": "Analyze my spending for 2025-08 on account 'acc_checking_01' and highlight top three categories and any abnormal transactions.",
        "tool_steps": [
          "Step 1: Pull transactions for 'acc_checking_01' for 2025-08. Step 2: Aggregate by category, find top three, and flag outliers."
        ],
        "tool_nodes": [
          {
            "task": "analyze_monthly_spending",
            "arguments": [
              {
                "name": "month",
                "value": "2025-08"
              },
              {
                "name": "account_id",
                "value": "acc_checking_01"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1062,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "analyze_monthly_spending",
            "arguments": [
              {
                "name": "month",
                "type": "string",
                "desc": "Month to analyze in YYYY-MM format"
              },
              {
                "name": "account_id",
                "type": "string",
                "desc": "Account identifier to analyze"
              }
            ]
          }
        ],
        "instruction": "Provide a summary of June 2025 expenses on 'credit_visa_ending_1234' with merchant breakdown and suggestions to reduce restaurant spending.",
        "tool_steps": [
          "Step 1: Query credit card transactions for June 2025. Step 2: Produce merchant breakdown and recommend measures to lower dining costs."
        ],
        "tool_nodes": [
          {
            "task": "analyze_monthly_spending",
            "arguments": [
              {
                "name": "month",
                "value": "2025-06"
              },
              {
                "name": "account_id",
                "value": "credit_visa_ending_1234"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1063,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "analyze_monthly_spending",
            "arguments": [
              {
                "name": "month",
                "type": "string",
                "desc": "Month to analyze in YYYY-MM format"
              },
              {
                "name": "account_id",
                "type": "string",
                "desc": "Account identifier to analyze"
              }
            ]
          }
        ],
        "instruction": "Compare March 2025 vs April 2025 spending for 'household_joint' and show percent change per category.",
        "tool_steps": [
          "Step 1: Fetch transactions for 'household_joint' for March and April 2025. Step 2: Aggregate by category and compute percent changes."
        ],
        "tool_nodes": [
          {
            "task": "analyze_monthly_spending",
            "arguments": [
              {
                "name": "month",
                "value": "2025-04"
              },
              {
                "name": "account_id",
                "value": "household_joint"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1064,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "set_budget_for_category",
            "arguments": [
              {
                "name": "category",
                "type": "string",
                "desc": "Spending category to set the budget for"
              },
              {
                "name": "monthly_limit",
                "type": "float",
                "desc": "Monthly budget limit in account currency"
              }
            ]
          }
        ],
        "instruction": "Set a monthly budget of 300.00 EUR for 'Dining' starting September 2025.",
        "tool_steps": [
          "Step 1: Configure the budget for category 'Dining' with monthly_limit 300.00 and start date 2025-09-01."
        ],
        "tool_nodes": [
          {
            "task": "set_budget_for_category",
            "arguments": [
              {
                "name": "category",
                "value": "Dining"
              },
              {
                "name": "monthly_limit",
                "value": 300.0
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1065,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "set_budget_for_category",
            "arguments": [
              {
                "name": "category",
                "type": "string",
                "desc": "Spending category to set the budget for"
              },
              {
                "name": "monthly_limit",
                "type": "float",
                "desc": "Monthly budget limit in account currency"
              }
            ]
          }
        ],
        "instruction": "Create a $500 monthly budget for 'Groceries' and notify me when I'm at 80% of it.",
        "tool_steps": [
          "Step 1: Set budget for 'Groceries' at 500.00 USD per month and enable 80% threshold alert."
        ],
        "tool_nodes": [
          {
            "task": "set_budget_for_category",
            "arguments": [
              {
                "name": "category",
                "value": "Groceries"
              },
              {
                "name": "monthly_limit",
                "value": 500.0
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1066,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "set_budget_for_category",
            "arguments": [
              {
                "name": "category",
                "type": "string",
                "desc": "Spending category to set the budget for"
              },
              {
                "name": "monthly_limit",
                "type": "float",
                "desc": "Monthly budget limit in account currency"
              }
            ]
          }
        ],
        "instruction": "Add a 100.00 GBP monthly allowance for 'Transport' for my teen's card.",
        "tool_steps": [
          "Step 1: Configure monthly budget for 'Transport' with limit 100.00 GBP and assign to dependent card."
        ],
        "tool_nodes": [
          {
            "task": "set_budget_for_category",
            "arguments": [
              {
                "name": "category",
                "value": "Transport"
              },
              {
                "name": "monthly_limit",
                "value": 100.0
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1067,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "check_credit_score",
            "arguments": [
              {
                "name": "ssn_last4",
                "type": "string",
                "desc": "Last 4 digits of SSN or local ID to verify identity"
              },
              {
                "name": "consent",
                "type": "boolean",
                "desc": "User consent flag to run credit check"
              }
            ]
          }
        ],
        "instruction": "Check my credit score; I consent to run the check (last4 '1234').",
        "tool_steps": [
          "Step 1: Verify consent flag. Step 2: Call check_credit_score with ssn_last4 '1234' and consent true."
        ],
        "tool_nodes": [
          {
            "task": "check_credit_score",
            "arguments": [
              {
                "name": "ssn_last4",
                "value": "1234"
              },
              {
                "name": "consent",
                "value": true
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1068,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "check_credit_score",
            "arguments": [
              {
                "name": "ssn_last4",
                "type": "string",
                "desc": "Last 4 digits of SSN or local ID to verify identity"
              },
              {
                "name": "consent",
                "type": "boolean",
                "desc": "User consent flag to run credit check"
              }
            ]
          }
        ],
        "instruction": "Run a soft credit inquiry for user with last4 '9876' (consent = true) and return credit rating band.",
        "tool_steps": [
          "Step 1: Confirm consent. Step 2: Execute check_credit_score for '9876' as a soft inquiry and return rating band."
        ],
        "tool_nodes": [
          {
            "task": "check_credit_score",
            "arguments": [
              {
                "name": "ssn_last4",
                "value": "9876"
              },
              {
                "name": "consent",
                "value": true
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1069,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "find_nearby_atm",
            "arguments": [
              {
                "name": "location",
                "type": "string",
                "desc": "User location or address to search near"
              },
              {
                "name": "cash_only",
                "type": "boolean",
                "desc": "Whether the ATM must dispense cash without fees"
              }
            ]
          }
        ],
        "instruction": "Find nearby ATMs around 'Unter den Linden, Berlin' that are fee-free if possible.",
        "tool_steps": [
          "Step 1: Search for ATMs near 'Unter den Linden, Berlin'. Step 2: Prioritize ATMs marked fee-free and return top results."
        ],
        "tool_nodes": [
          {
            "task": "find_nearby_atm",
            "arguments": [
              {
                "name": "location",
                "value": "Unter den Linden, Berlin"
              },
              {
                "name": "cash_only",
                "value": false
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1070,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "find_nearby_atm",
            "arguments": [
              {
                "name": "location",
                "type": "string",
                "desc": "User location or address to search near"
              },
              {
                "name": "cash_only",
                "type": "boolean",
                "desc": "Whether the ATM must dispense cash without fees"
              }
            ]
          }
        ],
        "instruction": "Locate ATMs close to 'JFK Terminal 4' that accept my bank's debit card and are open 24/7.",
        "tool_steps": [
          "Step 1: Query ATMs at 'JFK Terminal 4' filtering for 24/7 and bank compatibility. Step 2: Return matching locations."
        ],
        "tool_nodes": [
          {
            "task": "find_nearby_atm",
            "arguments": [
              {
                "name": "location",
                "value": "JFK Terminal 4"
              },
              {
                "name": "cash_only",
                "value": false
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1071,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "convert_currency",
            "arguments": [
              {
                "name": "amount",
                "type": "float",
                "desc": "Amount to convert"
              },
              {
                "name": "target_currency",
                "type": "string",
                "desc": "Currency code to convert into (e.g., USD, EUR)"
              }
            ]
          }
        ],
        "instruction": "Convert 1,000.00 EUR to USD and show the exchange rate and estimated fee.",
        "tool_steps": [
          "Step 1: Query current conversion EUR -> USD for amount 1000.00. Step 2: Return converted amount, rate, and estimated fee."
        ],
        "tool_nodes": [
          {
            "task": "convert_currency",
            "arguments": [
              {
                "name": "amount",
                "value": 1000.0
              },
              {
                "name": "target_currency",
                "value": "USD"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1072,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "convert_currency",
            "arguments": [
              {
                "name": "amount",
                "type": "float",
                "desc": "Amount to convert"
              },
              {
                "name": "target_currency",
                "type": "string",
                "desc": "Currency code to convert into (e.g., USD, EUR)"
              }
            ]
          }
        ],
        "instruction": "I need to convert 50.00 GBP to EUR for a purchase â€” show the converted value and rate.",
        "tool_steps": [
          "Step 1: Perform GBP -> EUR conversion for 50.00. Step 2: Provide converted amount and the exchange rate used."
        ],
        "tool_nodes": [
          {
            "task": "convert_currency",
            "arguments": [
              {
                "name": "amount",
                "value": 50.0
              },
              {
                "name": "target_currency",
                "value": "EUR"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1073,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "convert_currency",
            "arguments": [
              {
                "name": "amount",
                "type": "float",
                "desc": "Amount to convert"
              },
              {
                "name": "target_currency",
                "type": "string",
                "desc": "Currency code to convert into (e.g., USD, EUR)"
              }
            ]
          }
        ],
        "instruction": "Quickly convert 0.025 BTC into USD and return the approx value and timestamp.",
        "tool_steps": [
          "Step 1: Request conversion for 0.025 BTC to USD. Step 2: Return approximate USD value and timestamp of quote."
        ],
        "tool_nodes": [
          {
            "task": "convert_currency",
            "arguments": [
              {
                "name": "amount",
                "value": 0.025
              },
              {
                "name": "target_currency",
                "value": "USD"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1074,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "split_bill_with_friends",
            "arguments": [
              {
                "name": "total_amount",
                "type": "float",
                "desc": "Total bill amount to split"
              },
              {
                "name": "participants",
                "type": "list",
                "desc": "List of participant identifiers or names"
              }
            ]
          }
        ],
        "instruction": "Split a â‚¬240.00 restaurant bill between Alice, Bob and me equally and send payment requests.",
        "tool_steps": [
          "Step 1: Calculate equal share for participants [Alice, Bob, Me]. Step 2: Use split_bill_with_friends to create payment requests for each."
        ],
        "tool_nodes": [
          {
            "task": "split_bill_with_friends",
            "arguments": [
              {
                "name": "total_amount",
                "value": 240.0
              },
              {
                "name": "participants",
                "value": [
                  "Alice",
                  "Bob",
                  "Me"
                ]
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1075,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "split_bill_with_friends",
            "arguments": [
              {
                "name": "total_amount",
                "type": "float",
                "desc": "Total bill amount to split"
              },
              {
                "name": "participants",
                "type": "list",
                "desc": "List of participant identifiers or names"
              }
            ]
          }
        ],
        "instruction": "Split a taxi fare of $32.40 between four friends, but charge Sarah only for two-thirds of her share.",
        "tool_steps": [
          "Step 1: Compute adjusted shares given Sarah's 2/3 share. Step 2: Create split requests for the four participants reflecting adjustment."
        ],
        "tool_nodes": [
          {
            "task": "split_bill_with_friends",
            "arguments": [
              {
                "name": "total_amount",
                "value": 32.4
              },
              {
                "name": "participants",
                "value": [
                  "Friend1",
                  "Friend2",
                  "Sarah",
                  "Friend4"
                ]
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1076,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "search_transaction_history",
            "arguments": [
              {
                "name": "query",
                "type": "string",
                "desc": "Search term (merchant, amount, memo)"
              },
              {
                "name": "date_range",
                "type": "string",
                "desc": "Date range to search within (YYYY-MM-DD to YYYY-MM-DD)"
              }
            ]
          }
        ],
        "instruction": "Find all transactions with 'STARBUCKS' between 2025-07-01 and 2025-08-31 on my checking account.",
        "tool_steps": [
          "Step 1: Search transaction history for 'STARBUCKS' within the specified date range. Step 2: Return matching transactions and totals."
        ],
        "tool_nodes": [
          {
            "task": "search_transaction_history",
            "arguments": [
              {
                "name": "query",
                "value": "STARBUCKS"
              },
              {
                "name": "date_range",
                "value": "2025-07-01 to 2025-08-31"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1077,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "search_transaction_history",
            "arguments": [
              {
                "name": "query",
                "type": "string",
                "desc": "Search term (merchant, amount, memo)"
              },
              {
                "name": "date_range",
                "type": "string",
                "desc": "Date range to search within (YYYY-MM-DD to YYYY-MM-DD)"
              }
            ]
          }
        ],
        "instruction": "Search for any transfers over $1,000 to 'savings' between 2025-01-01 and 2025-09-01.",
        "tool_steps": [
          "Step 1: Scan transactions for transfers to 'savings' greater than 1000 within the date range. Step 2: Return the list and sums."
        ],
        "tool_nodes": [
          {
            "task": "search_transaction_history",
            "arguments": [
              {
                "name": "query",
                "value": "transfer to savings >1000"
              },
              {
                "name": "date_range",
                "value": "2025-01-01 to 2025-09-01"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1078,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "create_savings_goal",
            "arguments": [
              {
                "name": "goal_name",
                "type": "string",
                "desc": "Name of the savings goal"
              },
              {
                "name": "target_amount",
                "type": "float",
                "desc": "Target amount to save"
              }
            ]
          }
        ],
        "instruction": "Create a savings goal called 'Emergency Fund' to reach 6,000.00 EUR by 2026-09-01.",
        "tool_steps": [
          "Step 1: Create savings goal 'Emergency Fund' with target 6000.00 and target date 2026-09-01. Step 2: Suggest monthly contributions required."
        ],
        "tool_nodes": [
          {
            "task": "create_savings_goal",
            "arguments": [
              {
                "name": "goal_name",
                "value": "Emergency Fund"
              },
              {
                "name": "target_amount",
                "value": 6000.0
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1079,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "create_savings_goal",
            "arguments": [
              {
                "name": "goal_name",
                "type": "string",
                "desc": "Name of the savings goal"
              },
              {
                "name": "target_amount",
                "type": "float",
                "desc": "Target amount to save"
              }
            ]
          }
        ],
        "instruction": "Set up a 'New Car' savings goal for 12,000 USD and auto-transfer 200 USD monthly.",
        "tool_steps": [
          "Step 1: Create goal 'New Car' with target 12000.00 USD. Step 2: Schedule automatic monthly transfer of 200.00 USD to the goal."
        ],
        "tool_nodes": [
          {
            "task": "create_savings_goal",
            "arguments": [
              {
                "name": "goal_name",
                "value": "New Car"
              },
              {
                "name": "target_amount",
                "value": 12000.0
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1080,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_crypto_price",
            "arguments": [
              {
                "name": "symbol",
                "type": "string",
                "desc": "Cryptocurrency symbol (e.g., BTC, ETH)"
              },
              {
                "name": "fiat_currency",
                "type": "string",
                "desc": "Fiat currency to quote in (e.g., USD)"
              }
            ]
          }
        ],
        "instruction": "Give me the current BTC price in USD, including 24h percent change and market cap.",
        "tool_steps": [
          "Step 1: Query get_crypto_price for symbol 'BTC' quoted in USD. Step 2: Return price, 24h percent change, and market cap."
        ],
        "tool_nodes": [
          {
            "task": "get_crypto_price",
            "arguments": [
              {
                "name": "symbol",
                "value": "BTC"
              },
              {
                "name": "fiat_currency",
                "value": "USD"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1081,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_crypto_price",
            "arguments": [
              {
                "name": "symbol",
                "type": "string",
                "desc": "Cryptocurrency symbol (e.g., BTC, ETH)"
              },
              {
                "name": "fiat_currency",
                "type": "string",
                "desc": "Fiat currency to quote in (e.g., USD)"
              }
            ]
          }
        ],
        "instruction": "What's the current price of ETH in EUR and its 7-day performance?",
        "tool_steps": [
          "Step 1: Retrieve get_crypto_price for 'ETH' in EUR. Step 2: Provide price and 7-day percent change."
        ],
        "tool_nodes": [
          {
            "task": "get_crypto_price",
            "arguments": [
              {
                "name": "symbol",
                "value": "ETH"
              },
              {
                "name": "fiat_currency",
                "value": "EUR"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1082,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_crypto_price",
            "arguments": [
              {
                "name": "symbol",
                "type": "string",
                "desc": "Cryptocurrency symbol (e.g., BTC, ETH)"
              },
              {
                "name": "fiat_currency",
                "type": "string",
                "desc": "Fiat currency to quote in (e.g., USD)"
              }
            ]
          }
        ],
        "instruction": "Provide a quick quote for 'ADA' in USD and include 24-hour volume.",
        "tool_steps": [
          "Step 1: Call get_crypto_price for 'ADA' in USD. Step 2: Return price and 24-hour trading volume."
        ],
        "tool_nodes": [
          {
            "task": "get_crypto_price",
            "arguments": [
              {
                "name": "symbol",
                "value": "ADA"
              },
              {
                "name": "fiat_currency",
                "value": "USD"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1083,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "automate_loan_payment",
            "arguments": [
              {
                "name": "loan_id",
                "type": "string",
                "desc": "Identifier for the loan account"
              },
              {
                "name": "schedule",
                "type": "string",
                "desc": "Payment schedule (e.g., monthly, biweekly) and amount"
              }
            ]
          }
        ],
        "instruction": "Set up automated monthly payments of 450.00 USD for loan 'LN-3344' starting on 2025-10-01.",
        "tool_steps": [
          "Step 1: Configure automate_loan_payment for loan 'LN-3344' with monthly schedule and amount 450.00 starting 2025-10-01."
        ],
        "tool_nodes": [
          {
            "task": "automate_loan_payment",
            "arguments": [
              {
                "name": "loan_id",
                "value": "LN-3344"
              },
              {
                "name": "schedule",
                "value": "monthly:450.00 starting 2025-10-01"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1084,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "automate_loan_payment",
            "arguments": [
              {
                "name": "loan_id",
                "type": "string",
                "desc": "Identifier for the loan account"
              },
              {
                "name": "schedule",
                "type": "string",
                "desc": "Payment schedule (e.g., monthly, biweekly) and amount"
              }
            ]
          }
        ],
        "instruction": "Create a biweekly payment schedule of 200.00 EUR for mortgage 'MTG-7789' until payoff.",
        "tool_steps": [
          "Step 1: Set automate_loan_payment for 'MTG-7789' with biweekly:200.00 schedule and mark as recurring until loan end."
        ],
        "tool_nodes": [
          {
            "task": "automate_loan_payment",
            "arguments": [
              {
                "name": "loan_id",
                "value": "MTG-7789"
              },
              {
                "name": "schedule",
                "value": "biweekly:200.00"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1085,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "identify_tax_deductible_expenses",
            "arguments": [
              {
                "name": "transactions_id",
                "type": "string",
                "desc": "Identifier for the transaction batch or file"
              },
              {
                "name": "country",
                "type": "string",
                "desc": "Country jurisdiction for tax rules"
              }
            ]
          }
        ],
        "instruction": "Analyze transaction batch 'tx_aug_2025' for potentially tax-deductible business expenses in the US.",
        "tool_steps": [
          "Step 1: Load transactions 'tx_aug_2025'. Step 2: Apply US tax rules to flag likely deductible business expenses and summarize totals."
        ],
        "tool_nodes": [
          {
            "task": "identify_tax_deductible_expenses",
            "arguments": [
              {
                "name": "transactions_id",
                "value": "tx_aug_2025"
              },
              {
                "name": "country",
                "value": "US"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1086,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "identify_tax_deductible_expenses",
            "arguments": [
              {
                "name": "transactions_id",
                "type": "string",
                "desc": "Identifier for the transaction batch or file"
              },
              {
                "name": "country",
                "type": "string",
                "desc": "Country jurisdiction for tax rules"
              }
            ]
          }
        ],
        "instruction": "Flag possible tax-deductible charitable donations from 'tx_2025_q3' under Canadian rules.",
        "tool_steps": [
          "Step 1: Inspect 'tx_2025_q3' for donation-type transactions. Step 2: Apply Canadian deduction criteria and list eligible amounts."
        ],
        "tool_nodes": [
          {
            "task": "identify_tax_deductible_expenses",
            "arguments": [
              {
                "name": "transactions_id",
                "value": "tx_2025_q3"
              },
              {
                "name": "country",
                "value": "CA"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1087,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_crypto_price",
            "arguments": [
              {
                "name": "symbol",
                "type": "string",
                "desc": "Cryptocurrency symbol (e.g., BTC, ETH)"
              },
              {
                "name": "fiat_currency",
                "type": "string",
                "desc": "Fiat currency to quote in (e.g., USD)"
              }
            ]
          }
        ],
        "instruction": "Quickly pull the current DOGE price in USD and the 24-hour percent move.",
        "tool_steps": [
          "Step 1: Query get_crypto_price for 'DOGE' in USD. Step 2: Return current price and 24h percent change."
        ],
        "tool_nodes": [
          {
            "task": "get_crypto_price",
            "arguments": [
              {
                "name": "symbol",
                "value": "DOGE"
              },
              {
                "name": "fiat_currency",
                "value": "USD"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1088,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "search_transaction_history",
            "arguments": [
              {
                "name": "query",
                "type": "string",
                "desc": "Search term (merchant, amount, memo)"
              },
              {
                "name": "date_range",
                "type": "string",
                "desc": "Date range to search within (YYYY-MM-DD to YYYY-MM-DD)"
              }
            ]
          }
        ],
        "instruction": "Locate any refunds from 'Amazon' during 2025-05-01 to 2025-09-01 and total the refunded amount.",
        "tool_steps": [
          "Step 1: Search transaction history for 'Amazon' refund entries in the date range. Step 2: Sum refund amounts and list entries."
        ],
        "tool_nodes": [
          {
            "task": "search_transaction_history",
            "arguments": [
              {
                "name": "query",
                "value": "Amazon refund"
              },
              {
                "name": "date_range",
                "value": "2025-05-01 to 2025-09-01"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1089,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "convert_currency",
            "arguments": [
              {
                "name": "amount",
                "type": "float",
                "desc": "Amount to convert"
              },
              {
                "name": "target_currency",
                "type": "string",
                "desc": "Currency code to convert into (e.g., USD, EUR)"
              }
            ]
          }
        ],
        "instruction": "Convert 2,500.00 CAD to JPY and provide the conversion rate and estimated receiving amount after fees.",
        "tool_steps": [
          "Step 1: Query CAD -> JPY conversion for 2500.00. Step 2: Calculate estimated received JPY after typical fee and return rate and net amount."
        ],
        "tool_nodes": [
          {
            "task": "convert_currency",
            "arguments": [
              {
                "name": "amount",
                "value": 2500.0
              },
              {
                "name": "target_currency",
                "value": "JPY"
              }
            ]
          }
        ],
        "category": "finance",
        "synthetic": true
      },
      {
        "my_id": 1090,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_latest_sports_scores",
            "arguments": [
              {
                "name": "league",
                "type": "string",
                "desc": "Sports league or competition"
              },
              {
                "name": "date",
                "type": "date",
                "desc": "Date to retrieve scores for (YYYY-MM-DD)"
              }
            ]
          }
        ],
        "instruction": "Show me the latest Premier League scores for 2025-09-06.",
        "tool_steps": [
          "Step 1: Query get_latest_sports_scores for league 'Premier League' and date '2025-09-06'. Step 2: Return match list with final scores and key events."
        ],
        "tool_nodes": [
          {
            "task": "get_latest_sports_scores",
            "arguments": [
              {
                "name": "league",
                "value": "Premier League"
              },
              {
                "name": "date",
                "value": "2025-09-06"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1091,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_latest_sports_scores",
            "arguments": [
              {
                "name": "league",
                "type": "string",
                "desc": "Sports league or competition"
              },
              {
                "name": "date",
                "type": "date",
                "desc": "Date to retrieve scores for (YYYY-MM-DD)"
              }
            ]
          }
        ],
        "instruction": "Give me the final scores for NBA games on 2025-04-12 and highlight overtime games.",
        "tool_steps": [
          "Step 1: Request get_latest_sports_scores for league 'NBA' and date '2025-04-12'. Step 2: Filter results to mark overtime games and return boxscore summaries."
        ],
        "tool_nodes": [
          {
            "task": "get_latest_sports_scores",
            "arguments": [
              {
                "name": "league",
                "value": "NBA"
              },
              {
                "name": "date",
                "value": "2025-04-12"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1092,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_latest_sports_scores",
            "arguments": [
              {
                "name": "league",
                "type": "string",
                "desc": "Sports league or competition"
              },
              {
                "name": "date",
                "type": "date",
                "desc": "Date to retrieve scores for (YYYY-MM-DD)"
              }
            ]
          }
        ],
        "instruction": "Fetch the latest scores for UEFA Champions League matches on 2025-10-21 and show goal scorers.",
        "tool_steps": [
          "Step 1: Call get_latest_sports_scores for 'UEFA Champions League' on '2025-10-21'. Step 2: Return match scores and list goal scorers per match."
        ],
        "tool_nodes": [
          {
            "task": "get_latest_sports_scores",
            "arguments": [
              {
                "name": "league",
                "value": "UEFA Champions League"
              },
              {
                "name": "date",
                "value": "2025-10-21"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1093,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "find_podcast_on_topic",
            "arguments": [
              {
                "name": "topic",
                "type": "string",
                "desc": "Subject or keyword to search podcasts for"
              },
              {
                "name": "language",
                "type": "string",
                "desc": "Preferred language of the podcast"
              }
            ]
          }
        ],
        "instruction": "Find recent English podcasts about 'remote work productivity' and list top three episodes.",
        "tool_steps": [
          "Step 1: Search for podcasts matching topic 'remote work productivity' with language 'en'. Step 2: Return top three episodes with show name, episode title, duration and publish date."
        ],
        "tool_nodes": [
          {
            "task": "find_podcast_on_topic",
            "arguments": [
              {
                "name": "topic",
                "value": "remote work productivity"
              },
              {
                "name": "language",
                "value": "en"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1094,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "find_podcast_on_topic",
            "arguments": [
              {
                "name": "topic",
                "type": "string",
                "desc": "Subject or keyword to search podcasts for"
              },
              {
                "name": "language",
                "type": "string",
                "desc": "Preferred language of the podcast"
              }
            ]
          }
        ],
        "instruction": "Search for Spanish-language podcasts on 'modern art' and return three recommended episodes.",
        "tool_steps": [
          "Step 1: Query find_podcast_on_topic for topic 'modern art' and language 'es'. Step 2: Provide three episode recommendations with short descriptions."
        ],
        "tool_nodes": [
          {
            "task": "find_podcast_on_topic",
            "arguments": [
              {
                "name": "topic",
                "value": "modern art"
              },
              {
                "name": "language",
                "value": "es"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1095,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "find_podcast_on_topic",
            "arguments": [
              {
                "name": "topic",
                "type": "string",
                "desc": "Subject or keyword to search podcasts for"
              },
              {
                "name": "language",
                "type": "string",
                "desc": "Preferred language of the podcast"
              }
            ]
          }
        ],
        "instruction": "Recommend podcasts in English about 'space exploration' and include one episode suitable for kids.",
        "tool_steps": [
          "Step 1: Search podcast catalogs for 'space exploration' in 'en'. Step 2: Return three episodes and mark one family-friendly show."
        ],
        "tool_nodes": [
          {
            "task": "find_podcast_on_topic",
            "arguments": [
              {
                "name": "topic",
                "value": "space exploration"
              },
              {
                "name": "language",
                "value": "en"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1096,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "book_movie_tickets",
            "arguments": [
              {
                "name": "cinema",
                "type": "string",
                "desc": "Cinema or chain name"
              },
              {
                "name": "showtime",
                "type": "string",
                "desc": "Desired showtime in ISO datetime or local time format"
              }
            ]
          }
        ],
        "instruction": "Book two tickets for 'Dune: Part Two' at 'CinemaCity Potsdamer Platz' for 2025-11-01 at 19:30, seats together.",
        "tool_steps": [
          "Step 1: Search showings for 'Dune: Part Two' at 'CinemaCity Potsdamer Platz' on '2025-11-01' at 19:30. Step 2: Reserve two adjacent seats and complete booking."
        ],
        "tool_nodes": [
          {
            "task": "book_movie_tickets",
            "arguments": [
              {
                "name": "cinema",
                "value": "CinemaCity Potsdamer Platz"
              },
              {
                "name": "showtime",
                "value": "2025-11-01T19:30"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1097,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "book_movie_tickets",
            "arguments": [
              {
                "name": "cinema",
                "type": "string",
                "desc": "Cinema or chain name"
              },
              {
                "name": "showtime",
                "type": "string",
                "desc": "Desired showtime in ISO datetime or local time format"
              }
            ]
          }
        ],
        "instruction": "Reserve one IMAX ticket for the 2025-12-18 21:00 screening at 'IMAX BFI London'.",
        "tool_steps": [
          "Step 1: Locate IMAX screening at 'IMAX BFI London' on '2025-12-18' at 21:00. Step 2: Book single ticket and confirm seat selection."
        ],
        "tool_nodes": [
          {
            "task": "book_movie_tickets",
            "arguments": [
              {
                "name": "cinema",
                "value": "IMAX BFI London"
              },
              {
                "name": "showtime",
                "value": "2025-12-18T21:00"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1098,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "book_movie_tickets",
            "arguments": [
              {
                "name": "cinema",
                "type": "string",
                "desc": "Cinema or chain name"
              },
              {
                "name": "showtime",
                "type": "string",
                "desc": "Desired showtime in ISO datetime or local time format"
              }
            ]
          }
        ],
        "instruction": "Get two tickets for an afternoon showing of a family movie at 'Vue Westfield' on 2025-10-18 around 15:00.",
        "tool_steps": [
          "Step 1: Find family-friendly showtimes near 15:00 at 'Vue Westfield' on 2025-10-18. Step 2: Reserve two seats and return confirmation."
        ],
        "tool_nodes": [
          {
            "task": "book_movie_tickets",
            "arguments": [
              {
                "name": "cinema",
                "value": "Vue Westfield"
              },
              {
                "name": "showtime",
                "value": "2025-10-18T15:00"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1099,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_tv_show_recommendations",
            "arguments": [
              {
                "name": "preferred_genre",
                "type": "string",
                "desc": "Genre the user prefers"
              },
              {
                "name": "platform",
                "type": "string",
                "desc": "Streaming platform preference (optional)"
              }
            ]
          }
        ],
        "instruction": "Recommend three sci-fi TV shows similar to 'Black Mirror' available on Netflix.",
        "tool_steps": [
          "Step 1: Query TV recommendations for genre 'sci-fi' and similarity to 'Black Mirror' filtered for platform 'Netflix'. Step 2: Return three shows with brief reasons why."
        ],
        "tool_nodes": [
          {
            "task": "get_tv_show_recommendations",
            "arguments": [
              {
                "name": "preferred_genre",
                "value": "sci-fi"
              },
              {
                "name": "platform",
                "value": "Netflix"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1100,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_tv_show_recommendations",
            "arguments": [
              {
                "name": "preferred_genre",
                "type": "string",
                "desc": "Genre the user prefers"
              },
              {
                "name": "platform",
                "type": "string",
                "desc": "Streaming platform preference (optional)"
              }
            ]
          }
        ],
        "instruction": "Suggest light comedy series for relaxed evenings; prefer shows on Amazon Prime.",
        "tool_steps": [
          "Step 1: Filter TV shows by genre 'comedy' and platform 'Amazon Prime'. Step 2: Return a short list of light comedy series with episode counts."
        ],
        "tool_nodes": [
          {
            "task": "get_tv_show_recommendations",
            "arguments": [
              {
                "name": "preferred_genre",
                "value": "comedy"
              },
              {
                "name": "platform",
                "value": "Amazon Prime"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1101,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_tv_show_recommendations",
            "arguments": [
              {
                "name": "preferred_genre",
                "type": "string",
                "desc": "Genre the user prefers"
              },
              {
                "name": "platform",
                "type": "string",
                "desc": "Streaming platform preference (optional)"
              }
            ]
          }
        ],
        "instruction": "I like crime dramas â€” recommend binge-worthy shows across any platform with at least 3 seasons.",
        "tool_steps": [
          "Step 1: Search crime drama series with 3+ seasons. Step 2: Return recommendations across platforms and note season counts."
        ],
        "tool_nodes": [
          {
            "task": "get_tv_show_recommendations",
            "arguments": [
              {
                "name": "preferred_genre",
                "value": "crime drama"
              },
              {
                "name": "platform",
                "value": "any"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1102,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "start_multiplayer_game",
            "arguments": [
              {
                "name": "game_id",
                "type": "string",
                "desc": "Identifier or name of the multiplayer game"
              },
              {
                "name": "players",
                "type": "list",
                "desc": "List of player identifiers or invitees"
              }
            ]
          }
        ],
        "instruction": "Start a ranked match of 'Valorant' and invite teammates: 'PlayerA', 'PlayerB' and 'PlayerC'.",
        "tool_steps": [
          "Step 1: Initialize start_multiplayer_game with game_id 'Valorant'. Step 2: Send invites to players ['PlayerA','PlayerB','PlayerC'] and create lobby for ranked match."
        ],
        "tool_nodes": [
          {
            "task": "start_multiplayer_game",
            "arguments": [
              {
                "name": "game_id",
                "value": "Valorant"
              },
              {
                "name": "players",
                "value": [
                  "PlayerA",
                  "PlayerB",
                  "PlayerC"
                ]
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1103,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "start_multiplayer_game",
            "arguments": [
              {
                "name": "game_id",
                "type": "string",
                "desc": "Identifier or name of the multiplayer game"
              },
              {
                "name": "players",
                "type": "list",
                "desc": "List of player identifiers or invitees"
              }
            ]
          }
        ],
        "instruction": "Create a casual 'Among Us' private game and invite my friends 'Sam' and 'Jess'.",
        "tool_steps": [
          "Step 1: Create private lobby for 'Among Us'. Step 2: Invite 'Sam' and 'Jess' and set game to casual mode."
        ],
        "tool_nodes": [
          {
            "task": "start_multiplayer_game",
            "arguments": [
              {
                "name": "game_id",
                "value": "Among Us"
              },
              {
                "name": "players",
                "value": [
                  "Sam",
                  "Jess"
                ]
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1104,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "start_multiplayer_game",
            "arguments": [
              {
                "name": "game_id",
                "type": "string",
                "desc": "Identifier or name of the multiplayer game"
              },
              {
                "name": "players",
                "type": "list",
                "desc": "List of player identifiers or invitees"
              }
            ]
          }
        ],
        "instruction": "Set up a co-op session for 'It Takes Two' and invite 'Partner1'.",
        "tool_steps": [
          "Step 1: Launch start_multiplayer_game for 'It Takes Two'. Step 2: Invite 'Partner1' to the co-op session and configure difficulty to 'Normal'."
        ],
        "tool_nodes": [
          {
            "task": "start_multiplayer_game",
            "arguments": [
              {
                "name": "game_id",
                "value": "It Takes Two"
              },
              {
                "name": "players",
                "value": [
                  "Partner1"
                ]
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1105,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_lyrics_for_song",
            "arguments": [
              {
                "name": "song_title",
                "type": "string",
                "desc": "Title of the song"
              },
              {
                "name": "artist",
                "type": "string",
                "desc": "Artist name"
              }
            ]
          }
        ],
        "instruction": "Fetch the lyrics for 'Imagine' by John Lennon (display snippet up to 25 words).",
        "tool_steps": [
          "Step 1: Query get_lyrics_for_song for title 'Imagine' and artist 'John Lennon'. Step 2: Return a compliant snippet (up to 25 words) and citation note if required."
        ],
        "tool_nodes": [
          {
            "task": "get_lyrics_for_song",
            "arguments": [
              {
                "name": "song_title",
                "value": "Imagine"
              },
              {
                "name": "artist",
                "value": "John Lennon"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1106,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_lyrics_for_song",
            "arguments": [
              {
                "name": "song_title",
                "type": "string",
                "desc": "Title of the song"
              },
              {
                "name": "artist",
                "type": "string",
                "desc": "Artist name"
              }
            ]
          }
        ],
        "instruction": "Provide the chorus lines for 'Rolling in the Deep' by Adele (short excerpt).",
        "tool_steps": [
          "Step 1: Request get_lyrics_for_song for 'Rolling in the Deep' by 'Adele'. Step 2: Return short chorus excerpt within copyright limits and indicate source."
        ],
        "tool_nodes": [
          {
            "task": "get_lyrics_for_song",
            "arguments": [
              {
                "name": "song_title",
                "value": "Rolling in the Deep"
              },
              {
                "name": "artist",
                "value": "Adele"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1107,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "identify_song_playing",
            "arguments": [
              {
                "name": "audio_clip_id",
                "type": "string",
                "desc": "Reference ID to a short audio clip"
              },
              {
                "name": "snippet_length_sec",
                "type": "integer",
                "desc": "Length of audio snippet in seconds"
              }
            ]
          }
        ],
        "instruction": "Identify the song in audio clip 'clip_0925' (10 seconds).",
        "tool_steps": [
          "Step 1: Send audio clip 'clip_0925' to identify_song_playing with snippet_length_sec 10. Step 2: Return song title, artist and confidence score."
        ],
        "tool_nodes": [
          {
            "task": "identify_song_playing",
            "arguments": [
              {
                "name": "audio_clip_id",
                "value": "clip_0925"
              },
              {
                "name": "snippet_length_sec",
                "value": 10
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1108,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "identify_song_playing",
            "arguments": [
              {
                "name": "audio_clip_id",
                "type": "string",
                "desc": "Reference ID to a short audio clip"
              },
              {
                "name": "snippet_length_sec",
                "type": "integer",
                "desc": "Length of audio snippet in seconds"
              }
            ]
          }
        ],
        "instruction": "Identify the tune from 'recording_bar_01' (5-second snippet) and tell me the artist.",
        "tool_steps": [
          "Step 1: Run identify_song_playing with audio_clip_id 'recording_bar_01' and snippet_length_sec 5. Step 2: Return matching song metadata and confidence level."
        ],
        "tool_nodes": [
          {
            "task": "identify_song_playing",
            "arguments": [
              {
                "name": "audio_clip_id",
                "value": "recording_bar_01"
              },
              {
                "name": "snippet_length_sec",
                "value": 5
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1109,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "read_aloud_news_headlines",
            "arguments": [
              {
                "name": "region",
                "type": "string",
                "desc": "Geographic region for news headlines"
              },
              {
                "name": "category",
                "type": "string",
                "desc": "News category (e.g., world, sports, tech)"
              }
            ]
          }
        ],
        "instruction": "Read aloud the top world news headlines for Europe in the morning briefing.",
        "tool_steps": [
          "Step 1: Fetch top headlines for region 'Europe' and category 'world'. Step 2: Produce a short read-aloud script of the top 5 headlines."
        ],
        "tool_nodes": [
          {
            "task": "read_aloud_news_headlines",
            "arguments": [
              {
                "name": "region",
                "value": "Europe"
              },
              {
                "name": "category",
                "value": "world"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1110,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "read_aloud_news_headlines",
            "arguments": [
              {
                "name": "region",
                "type": "string",
                "desc": "Geographic region for news headlines"
              },
              {
                "name": "category",
                "type": "string",
                "desc": "News category (e.g., world, sports, tech)"
              }
            ]
          }
        ],
        "instruction": "Provide a short read-aloud summary of morning tech headlines for the US audience.",
        "tool_steps": [
          "Step 1: Collect top technology headlines for region 'US'. Step 2: Format them into a concise read-aloud script with source attributions."
        ],
        "tool_nodes": [
          {
            "task": "read_aloud_news_headlines",
            "arguments": [
              {
                "name": "region",
                "value": "US"
              },
              {
                "name": "category",
                "value": "tech"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1111,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_random_trivia_question",
            "arguments": [
              {
                "name": "difficulty",
                "type": "string",
                "desc": "Difficulty level (easy, medium, hard)"
              },
              {
                "name": "topic",
                "type": "string",
                "desc": "Trivia topic or category (optional)"
              }
            ]
          }
        ],
        "instruction": "Give me a medium difficulty trivia question about world geography with the answer hidden initially.",
        "tool_steps": [
          "Step 1: Generate a trivia question at 'medium' difficulty about 'world geography'. Step 2: Return the question and a separate answer field that can be revealed later."
        ],
        "tool_nodes": [
          {
            "task": "get_random_trivia_question",
            "arguments": [
              {
                "name": "difficulty",
                "value": "medium"
              },
              {
                "name": "topic",
                "value": "world geography"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1112,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "get_random_trivia_question",
            "arguments": [
              {
                "name": "difficulty",
                "type": "string",
                "desc": "Difficulty level (easy, medium, hard)"
              },
              {
                "name": "topic",
                "type": "string",
                "desc": "Trivia topic or category (optional)"
              }
            ]
          }
        ],
        "instruction": "Provide an easy pop-culture trivia question suitable for a family game night.",
        "tool_steps": [
          "Step 1: Create an 'easy' difficulty trivia question in topic 'pop culture'. Step 2: Supply the question and indicate the correct answer separately."
        ],
        "tool_nodes": [
          {
            "task": "get_random_trivia_question",
            "arguments": [
              {
                "name": "difficulty",
                "value": "easy"
              },
              {
                "name": "topic",
                "value": "pop culture"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1113,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "find_local_events_and_concerts",
            "arguments": [
              {
                "name": "location",
                "type": "string",
                "desc": "City or area to search for events"
              },
              {
                "name": "date_range",
                "type": "string",
                "desc": "Date range to search (YYYY-MM-DD to YYYY-MM-DD)"
              }
            ]
          }
        ],
        "instruction": "Find live concerts and local events in 'Berlin' between 2025-11-01 and 2025-11-07.",
        "tool_steps": [
          "Step 1: Query find_local_events_and_concerts for location 'Berlin' and date_range '2025-11-01 to 2025-11-07'. Step 2: Return event list with venues, dates, and ticket links where available."
        ],
        "tool_nodes": [
          {
            "task": "find_local_events_and_concerts",
            "arguments": [
              {
                "name": "location",
                "value": "Berlin"
              },
              {
                "name": "date_range",
                "value": "2025-11-01 to 2025-11-07"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
      {
        "my_id": 1114,
        "n_tools": 1,
        "sampled_nodes": [
          {
            "task": "find_local_events_and_concerts",
            "arguments": [
              {
                "name": "location",
                "type": "string",
                "desc": "City or area to search for events"
              },
              {
                "name": "date_range",
                "type": "string",
                "desc": "Date range to search (YYYY-MM-DD to YYYY-MM-DD)"
              }
            ]
          }
        ],
        "instruction": "Show family-friendly events and children's concerts in 'Amsterdam' for the weekend 2025-10-24 to 2025-10-26.",
        "tool_steps": [
          "Step 1: Filter local events in 'Amsterdam' for date_range '2025-10-24 to 2025-10-26' and category 'family'. Step 2: Return events with ages recommended and ticketing information."
        ],
        "tool_nodes": [
          {
            "task": "find_local_events_and_concerts",
            "arguments": [
              {
                "name": "location",
                "value": "Amsterdam"
              },
              {
                "name": "date_range",
                "value": "2025-10-24 to 2025-10-26"
              }
            ]
          }
        ],
        "category": "entertainment_and_media",
        "synthetic": true
      },
        {
            "my_id": 1115,
            "n_tools": 1,
            "sampled_nodes": [
            {
                "task": "convert_file_format",
                "arguments": [
                {
                    "name": "input_path",
                    "type": "string",
                    "desc": "Path to the input file"
                },
                {
                    "name": "target_format",
                    "type": "string",
                    "desc": "Desired output format, e.g., csv, pdf, json"
                }
              ]
            }
          ],
          "instruction": "Convert 'report_2025_q3.docx' to csv format.",
          "tool_steps": [
            "Step 1: Open 'report_2025_q3.docx' and convert to csv."
          ],
          "tool_nodes": [
            {
              "task": "convert_file_format",
              "arguments": [
                {
                  "name": "input_path",
                  "value": "report_2025_q3.docx"
                },
                {
                  "name": "target_format",
                  "value": "csv"
                }
              ]
            }
          ],
          "category": "data",
          "synthetic": true
        },
        {
          "my_id": 1116,
          "n_tools": 1,
          "sampled_nodes": [
            {
              "task": "convert_file_format",
              "arguments": [
                {
                  "name": "input_path",
                  "type": "string",
                  "desc": "Path to the input file"
                },
                {
                  "name": "target_format",
                  "type": "string",
                  "desc": "Desired output format, e.g., csv, pdf, json"
                }
              ]
            }
          ],
          "instruction": "Convert 'data_backup.sqlite' to json format.",
          "tool_steps": [
            "Step 1: Open 'data_backup.sqlite' and convert to json."
          ],
          "tool_nodes": [
            {
              "task": "convert_file_format",
              "arguments": [
                {
                  "name": "input_path",
                  "value": "data_backup.sqlite"
                },
                {
                  "name": "target_format",
                  "value": "json"
                }
              ]
            }
          ],
          "category": "data",
          "synthetic": true
        },
        {
          "my_id": 1117,
          "n_tools": 1,
          "sampled_nodes": [
            {
              "task": "convert_file_format",
              "arguments": [
                {
                  "name": "input_path",
                  "type": "string",
                  "desc": "Path to the input file"
                },
                {
                  "name": "target_format",
                  "type": "string",
                  "desc": "Desired output format, e.g., csv, pdf, json"
                }
              ]
            }
          ],
          "instruction": "Convert 'presentation.key' to pdf format.",
          "tool_steps": [
            "Step 1: Open 'presentation.key' and convert to pdf."
          ],
          "tool_nodes": [
            {
              "task": "convert_file_format",
              "arguments": [
                {
                  "name": "input_path",
                  "value": "presentation.key"
                },
                {
                  "name": "target_format",
                  "value": "pdf"
                }
              ]
            }
          ],
          "category": "data",
          "synthetic": true
        },
        {
          "my_id": 1118,
          "n_tools": 1,
          "sampled_nodes": [
            {
              "task": "extract_text_from_image",
              "arguments": [
                {
                  "name": "image_id",
                  "type": "string",
                  "desc": "Identifier or filename of the image"
                },
                {
                  "name": "language",
                  "type": "string",
                  "desc": "Expected language of text in image"
                }
              ]
            }
          ],
          "instruction": "Extract text from image 'receipt_0725.jpg' and return plain text.",
          "tool_steps": [
            "Step 1: Run OCR on the supplied image and return the extracted text."
          ],
          "tool_nodes": [
            {
              "task": "extract_text_from_image",
              "arguments": [
                {
                  "name": "image_id",
                  "value": "receipt_0725.jpg"
                },
                {
                  "name": "language",
                  "value": "en"
                }
              ]
            }
          ],
          "category": "data",
          "synthetic": true
        },
        {
          "my_id": 1119,
          "n_tools": 1,
          "sampled_nodes": [
            {
              "task": "extract_text_from_image",
              "arguments": [
                {
                  "name": "image_id",
                  "type": "string",
                  "desc": "Identifier or filename of the image"
                },
                {
                  "name": "language",
                  "type": "string",
                  "desc": "Expected language of text in image"
                }
              ]
            }
          ],
          "instruction": "Extract text from image 'menu_paris.png' and return plain text.",
          "tool_steps": [
            "Step 1: Run OCR on the supplied image and return the extracted text."
          ],
          "tool_nodes": [
            {
              "task": "extract_text_from_image",
              "arguments": [
                {
                  "name": "image_id",
                  "value": "menu_paris.png"
                },
                {
                  "name": "language",
                  "value": "en"
                }
              ]
            }
          ],
          "category": "data",
          "synthetic": true
        },
        {
          "my_id": 1120,
          "n_tools": 1,
          "sampled_nodes": [
            {
              "task": "extract_text_from_image",
              "arguments": [
                {
                  "name": "image_id",
                  "type": "string",
                  "desc": "Identifier or filename of the image"
                },
                {
                  "name": "language",
                  "type": "string",
                  "desc": "Expected language of text in image"
                }
              ]
            }
          ],
          "instruction": "Extract text from image 'whiteboard_meeting.png' and return plain text.",
          "tool_steps": [
            "Step 1: Run OCR on the supplied image and return the extracted text."
          ],
          "tool_nodes": [
            {
              "task": "extract_text_from_image",
              "arguments": [
                {
                  "name": "image_id",
                  "value": "whiteboard_meeting.png"
                },
                {
                  "name": "language",
                  "value": "en-US"
                }
              ]
            }
          ],
          "category": "data",
          "synthetic": true
        },
        {
          "my_id": 1121,
          "n_tools": 1,
          "sampled_nodes": [
            {
              "task": "summarize_article_from_url",
              "arguments": [
                {
                  "name": "url",
                  "type": "string",
                  "desc": "URL of the article"
                },
                {
                  "name": "summary_length",
                  "type": "string",
                  "desc": "short or detailed"
                }
              ]
            }
          ],
          "instruction": "Summarize the article at 'https://example.com/tech-deepdive' with a short summary.",
          "tool_steps": [
            "Step 1: Fetch URL content and create the requested summary length."
          ],
          "tool_nodes": [
            {
              "task": "summarize_article_from_url",
              "arguments": [
                {
                  "name": "url",
                  "value": "https://example.com/tech-deepdive"
                },
                {
                  "name": "summary_length",
                  "value": "short"
                }
              ]
            }
          ],
          "category": "data",
          "synthetic": true
        },
        {
          "my_id": 1122,
          "n_tools": 1,
          "sampled_nodes": [
            {
              "task": "summarize_article_from_url",
              "arguments": [
                {
                  "name": "url",
                  "type": "string",
                  "desc": "URL of the article"
                },
                {
                  "name": "summary_length",
                  "type": "string",
                  "desc": "short or detailed"
                }
              ]
            }
          ],
          "instruction": "Summarize the article at 'https://news.site/market-update' with a detailed summary.",
          "tool_steps": [
            "Step 1: Fetch URL content and create the requested summary length."
          ],
          "tool_nodes": [
            {
              "task": "summarize_article_from_url",
              "arguments": [
                {
                  "name": "url",
                  "value": "https://news.site/market-update"
                },
                {
                  "name": "summary_length",
                  "value": "detailed"
                }
              ]
            }
          ],
          "category": "data",
          "synthetic": true
        },
        {
          "my_id": 1123,
          "n_tools": 1,
          "sampled_nodes": [
            {
              "task": "summarize_article_from_url",
              "arguments": [
                {
                  "name": "url",
                  "type": "string",
                  "desc": "URL of the article"
                },
                {
                  "name": "summary_length",
                  "type": "string",
                  "desc": "short or detailed"
                }
              ]
            }
          ],
          "instruction": "Summarize the article at 'https://blog.example/longform' with a short summary.",
          "tool_steps": [
            "Step 1: Fetch URL content and create the requested summary length."
          ],
          "tool_nodes": [
            {
              "task": "summarize_article_from_url",
              "arguments": [
                {
                  "name": "url",
                  "value": "https://blog.example/longform"
                },
                {
                  "name": "summary_length",
                  "value": "short"
                }
              ]
            }
          ],
          "category": "data",
          "synthetic": true
        },
        {
          "my_id": 1124,
          "n_tools": 1,
          "sampled_nodes": [
            {
              "task": "create_spreadsheet_from_data",
              "arguments": [
                {
                  "name": "data_source",
                  "type": "string",
                  "desc": "Reference to source data (file id or dataset)"
                },
                {
                  "name": "sheet_name",
                  "type": "string",
                  "desc": "Name for the spreadsheet or sheet"
                }
              ]
            }
          ],
          "instruction": "Create a spreadsheet named 'Sales_Q3' from source 'sales_db'.",
          "tool_steps": [
            "Step 1: Load source data and write into a spreadsheet with the provided sheet name."
          ],
          "tool_nodes": [
            {
              "task": "create_spreadsheet_from_data",
              "arguments": [
                {
                  "name": "data_source",
                  "value": "sales_db"
                },
                {
                  "name": "sheet_name",
                  "value": "Sales_Q3"
                }
              ]
            }
          ],
          "category": "data",
          "synthetic": true
        },
        {
          "my_id": 1125,
          "n_tools": 1,
          "sampled_nodes": [
            {
              "task": "create_spreadsheet_from_data",
              "arguments": [
                {
                  "name": "data_source",
                  "type": "string",
                  "desc": "Reference to source data (file id or dataset)"
                },
                {
                  "name": "sheet_name",
                  "type": "string",
                  "desc": "Name for the spreadsheet or sheet"
                }
              ]
            }
          ],
          "instruction": "Create a spreadsheet named 'Employee_Hours' from source 'timesheet_csv'.",
          "tool_steps": [
            "Step 1: Load source data and write into a spreadsheet with the provided sheet name."
          ],
          "tool_nodes": [
            {
              "task": "create_spreadsheet_from_data",
              "arguments": [
                {
                  "name": "data_source",
                  "value": "timesheet_csv"
                },
                {
                  "name": "sheet_name",
                  "value": "Employee_Hours"
                }
              ]
            }
          ],
          "category": "data",
          "synthetic": true
        },
        {
          "my_id": 1126,
          "n_tools": 1,
          "sampled_nodes": [
            {
              "task": "create_spreadsheet_from_data",
              "arguments": [
                {
                  "name": "data_source",
                  "type": "string",
                  "desc": "Reference to source data (file id or dataset)"
                },
                {
                  "name": "sheet_name",
                  "type": "string",
                  "desc": "Name for the spreadsheet or sheet"
                }
              ]
            }
          ],
          "instruction": "Create a spreadsheet named 'Inventory' from source 'inventory_api'.",
          "tool_steps": [
            "Step 1: Load source data and write into a spreadsheet with the provided sheet name."
          ],
          "tool_nodes": [
            {
              "task": "create_spreadsheet_from_data",
              "arguments": [
                {
                  "name": "data_source",
                  "value": "inventory_api"
                },
                {
                  "name": "sheet_name",
                  "value": "Inventory"
                }
              ]
            }
          ],
          "category": "data",
          "synthetic": true
        },
        {
          "my_id": 1127,
          "n_tools": 1,
          "sampled_nodes": [
            {
              "task": "query_dataset_with_natural_language",
              "arguments": [
                {
                  "name": "dataset_id",
                  "type": "string",
                  "desc": "Identifier for the dataset to query"
                },
                {
                  "name": "query",
                  "type": "string",
                  "desc": "Natural language query to run against dataset"
                }
              ]
            }
          ],
          "instruction": "On dataset 'customer_churn_2025' answer: 'Which segments have the highest churn?'",
          "tool_steps": [
            "Step 1: Parse the natural language query and translate to dataset query. Step 2: Execute and return results."
          ],
          "tool_nodes": [
            {
              "task": "query_dataset_with_natural_language",
              "arguments": [
                {
                  "name": "dataset_id",
                  "value": "customer_churn_2025"
                },
                {
                  "name": "query",
                  "value": "Which segments have the highest churn?"
                }
              ]
            }
          ],
          "category": "data",
          "synthetic": true
        },
        {
          "my_id": 1128,
          "n_tools": 1,
          "sampled_nodes": [
            {
              "task": "query_dataset_with_natural_language",
              "arguments": [
                {
                  "name": "dataset_id",
                  "type": "string",
                  "desc": "Identifier for the dataset to query"
                },
                {
                  "name": "query",
                  "type": "string",
                  "desc": "Natural language query to run against dataset"
                }
              ]
            }
          ],
          "instruction": "On dataset 'customer_churn_2025' answer: 'Show churn by region'",
          "tool_steps": [
            "Step 1: Parse the natural language query and translate to dataset query. Step 2: Execute and return results."
          ],
          "tool_nodes": [
            {
              "task": "query_dataset_with_natural_language",
              "arguments": [
                {
                  "name": "dataset_id",
                  "value": "customer_churn_2025"
                },
                {
                  "name": "query",
                  "value": "Show churn by region"
                }
              ]
            }
          ],
          "category": "data",
          "synthetic": true
        },
        {
            "my_id": 1129,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "query_dataset_with_natural_language",
                "arguments": [
                  {
                    "name": "dataset_id",
                    "type": "string",
                    "desc": "Identifier for the dataset to query"
                  },
                  {
                    "name": "query",
                    "type": "string",
                    "desc": "Natural language query to run against dataset"
                  }
                ]
              }
            ],
            "instruction": "On dataset 'customer_churn_2025' answer: 'List customers with >3 support tickets'",
            "tool_steps": [
              "Step 1: Parse the natural language query and translate to dataset query. Step 2: Execute and return results."
            ],
            "tool_nodes": [
              {
                "task": "query_dataset_with_natural_language",
                "arguments": [
                  {
                    "name": "dataset_id",
                    "value": "customer_churn_2025"
                  },
                  {
                    "name": "query",
                    "value": "List customers with >3 support tickets"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1130,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "generate_chart_from_data",
                "arguments": [
                  {
                    "name": "data_ref",
                    "type": "string",
                    "desc": "Reference to the data to chart"
                  },
                  {
                    "name": "chart_type",
                    "type": "string",
                    "desc": "Type of chart e.g., line, bar, pie"
                  }
                ]
              }
            ],
            "instruction": "Generate a line chart from 'monthly_revenue_2025' showing trends.",
            "tool_steps": [
              "Step 1: Load 'monthly_revenue_2025' and produce requested chart type with labels."
            ],
            "tool_nodes": [
              {
                "task": "generate_chart_from_data",
                "arguments": [
                  {
                    "name": "data_ref",
                    "value": "monthly_revenue_2025"
                  },
                  {
                    "name": "chart_type",
                    "value": "line"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1131,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "generate_chart_from_data",
                "arguments": [
                  {
                    "name": "data_ref",
                    "type": "string",
                    "desc": "Reference to the data to chart"
                  },
                  {
                    "name": "chart_type",
                    "type": "string",
                    "desc": "Type of chart e.g., line, bar, pie"
                  }
                ]
              }
            ],
            "instruction": "Generate a bar chart from 'monthly_revenue_2025' showing trends.",
            "tool_steps": [
              "Step 1: Load 'monthly_revenue_2025' and produce requested chart type with labels."
            ],
            "tool_nodes": [
              {
                "task": "generate_chart_from_data",
                "arguments": [
                  {
                    "name": "data_ref",
                    "value": "monthly_revenue_2025"
                  },
                  {
                    "name": "chart_type",
                    "value": "bar"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1132,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "generate_chart_from_data",
                "arguments": [
                  {
                    "name": "data_ref",
                    "type": "string",
                    "desc": "Reference to the data to chart"
                  },
                  {
                    "name": "chart_type",
                    "type": "string",
                    "desc": "Type of chart e.g., line, bar, pie"
                  }
                ]
              }
            ],
            "instruction": "Generate a pie chart from 'monthly_revenue_2025' showing trend composition.",
            "tool_steps": [
              "Step 1: Load 'monthly_revenue_2025' and produce requested chart type with labels."
            ],
            "tool_nodes": [
              {
                "task": "generate_chart_from_data",
                "arguments": [
                  {
                    "name": "data_ref",
                    "value": "monthly_revenue_2025"
                  },
                  {
                    "name": "chart_type",
                    "value": "pie"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1133,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "extract_tabular_data_from_pdf",
                "arguments": [
                  {
                    "name": "pdf_id",
                    "type": "string",
                    "desc": "Identifier or path to the PDF file"
                  },
                  {
                    "name": "page_range",
                    "type": "string",
                    "desc": "Page range to extract tables from, e.g., '1-3'"
                  }
                ]
              }
            ],
            "instruction": "Extract tables from 'financials_q2.pdf' pages 1-2.",
            "tool_steps": [
              "Step 1: Parse PDF pages and extract tabular sections into CSV or structured JSON."
            ],
            "tool_nodes": [
              {
                "task": "extract_tabular_data_from_pdf",
                "arguments": [
                  {
                    "name": "pdf_id",
                    "value": "financials_q2.pdf"
                  },
                  {
                    "name": "page_range",
                    "value": "1-2"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1134,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "extract_tabular_data_from_pdf",
                "arguments": [
                  {
                    "name": "pdf_id",
                    "type": "string",
                    "desc": "Identifier or path to the PDF file"
                  },
                  {
                    "name": "page_range",
                    "type": "string",
                    "desc": "Page range to extract tables from, e.g., '1-3'"
                  }
                ]
              }
            ],
            "instruction": "Extract tables from 'financials_q2.pdf' pages 3-4.",
            "tool_steps": [
              "Step 1: Parse PDF pages and extract tabular sections into CSV or structured JSON."
            ],
            "tool_nodes": [
              {
                "task": "extract_tabular_data_from_pdf",
                "arguments": [
                  {
                    "name": "pdf_id",
                    "value": "financials_q2.pdf"
                  },
                  {
                    "name": "page_range",
                    "value": "3-4"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1135,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "extract_tabular_data_from_pdf",
                "arguments": [
                  {
                    "name": "pdf_id",
                    "type": "string",
                    "desc": "Identifier or path to the PDF file"
                  },
                  {
                    "name": "page_range",
                    "type": "string",
                    "desc": "Page range to extract tables from, e.g., '1-3'"
                  }
                ]
              }
            ],
            "instruction": "Extract tables from 'financials_q2.pdf' pages 5-6.",
            "tool_steps": [
              "Step 1: Parse PDF pages and extract tabular sections into CSV or structured JSON."
            ],
            "tool_nodes": [
              {
                "task": "extract_tabular_data_from_pdf",
                "arguments": [
                  {
                    "name": "pdf_id",
                    "value": "financials_q2.pdf"
                  },
                  {
                    "name": "page_range",
                    "value": "5-6"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1136,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "clean_dataset",
                "arguments": [
                  {
                    "name": "dataset_id",
                    "type": "string",
                    "desc": "Dataset identifier to clean"
                  },
                  {
                    "name": "rules",
                    "type": "string",
                    "desc": "Cleaning rules or operations to apply"
                  }
                ]
              }
            ],
            "instruction": "Clean dataset 'leads_raw_2025' by removing duplicates and normalizing emails.",
            "tool_steps": [
              "Step 1: Apply cleaning rules to the dataset and return cleaned dataset metrics."
            ],
            "tool_nodes": [
              {
                "task": "clean_dataset",
                "arguments": [
                  {
                    "name": "dataset_id",
                    "value": "leads_raw_2025"
                  },
                  {
                    "name": "rules",
                    "value": "remove duplicates; normalize emails; trim whitespace"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1137,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "clean_dataset",
                "arguments": [
                  {
                    "name": "dataset_id",
                    "type": "string",
                    "desc": "Dataset identifier to clean"
                  },
                  {
                    "name": "rules",
                    "type": "string",
                    "desc": "Cleaning rules or operations to apply"
                  }
                ]
              }
            ],
            "instruction": "Run cleaning on 'customer_addresses' to standardize postal codes and remove empty rows.",
            "tool_steps": [
              "Step 1: Apply cleaning rules to the dataset and return cleaned dataset metrics."
            ],
            "tool_nodes": [
              {
                "task": "clean_dataset",
                "arguments": [
                  {
                    "name": "dataset_id",
                    "value": "customer_addresses"
                  },
                  {
                    "name": "rules",
                    "value": "standardize postal codes; remove empty rows; unify country codes"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1138,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "clean_dataset",
                "arguments": [
                  {
                    "name": "dataset_id",
                    "type": "string",
                    "desc": "Dataset identifier to clean"
                  },
                  {
                    "name": "rules",
                    "type": "string",
                    "desc": "Cleaning rules or operations to apply"
                  }
                ]
              }
            ],
            "instruction": "Clean 'sales_transactions_q3' by filling missing dates and converting amounts to a single currency.",
            "tool_steps": [
              "Step 1: Apply cleaning rules to the dataset and return cleaned dataset metrics."
            ],
            "tool_nodes": [
              {
                "task": "clean_dataset",
                "arguments": [
                  {
                    "name": "dataset_id",
                    "value": "sales_transactions_q3"
                  },
                  {
                    "name": "rules",
                    "value": "fill missing dates; unify currency to EUR; remove negative amounts"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1139,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "get_data_from_public_api",
                "arguments": [
                  {
                    "name": "api_endpoint",
                    "type": "string",
                    "desc": "Public API endpoint or name"
                  },
                  {
                    "name": "params",
                    "type": "string",
                    "desc": "Query parameters or filters"
                  }
                ]
              }
            ],
            "instruction": "Fetch weather data from 'openweather' for city 'Berlin' for 2025-09-10.",
            "tool_steps": [
              "Step 1: Call public API endpoint with params and return parsed JSON."
            ],
            "tool_nodes": [
              {
                "task": "get_data_from_public_api",
                "arguments": [
                  {
                    "name": "api_endpoint",
                    "value": "openweather"
                  },
                  {
                    "name": "params",
                    "value": "q=Berlin&date=2025-09-10"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1140,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "get_data_from_public_api",
                "arguments": [
                  {
                    "name": "api_endpoint",
                    "type": "string",
                    "desc": "Public API endpoint or name"
                  },
                  {
                    "name": "params",
                    "type": "string",
                    "desc": "Query parameters or filters"
                  }
                ]
              }
            ],
            "instruction": "Pull COVID-19 vaccination stats from 'who_api' for country 'Germany' for 2025-08.",
            "tool_steps": [
              "Step 1: Call public API endpoint with params and return parsed JSON."
            ],
            "tool_nodes": [
              {
                "task": "get_data_from_public_api",
                "arguments": [
                  {
                    "name": "api_endpoint",
                    "value": "who_api"
                  },
                  {
                    "name": "params",
                    "value": "country=Germany&month=2025-08"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1141,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "merge_documents",
                "arguments": [
                  {
                    "name": "doc_ids",
                    "type": "list",
                    "desc": "List of document identifiers to merge"
                  },
                  {
                    "name": "output_name",
                    "type": "string",
                    "desc": "Name for the merged document"
                  }
                ]
              }
            ],
            "instruction": "Merge documents ['proposal_v1.docx','proposal_v2.docx'] into 'proposal_final.docx'.",
            "tool_steps": [
              "Step 1: Concatenate documents preserving formatting and produce merged output."
            ],
            "tool_nodes": [
              {
                "task": "merge_documents",
                "arguments": [
                  {
                    "name": "doc_ids",
                    "value": [
                      "proposal_v1.docx",
                      "proposal_v2.docx"
                    ]
                  },
                  {
                    "name": "output_name",
                    "value": "proposal_final.docx"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1142,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "merge_documents",
                "arguments": [
                  {
                    "name": "doc_ids",
                    "type": "list",
                    "desc": "List of document identifiers to merge"
                  },
                  {
                    "name": "output_name",
                    "type": "string",
                    "desc": "Name for the merged document"
                  }
                ]
              }
            ],
            "instruction": "Combine 'chapter1.pdf', 'chapter2.pdf', 'chapter3.pdf' into 'book_draft.pdf'.",
            "tool_steps": [
              "Step 1: Concatenate documents preserving formatting and produce merged output."
            ],
            "tool_nodes": [
              {
                "task": "merge_documents",
                "arguments": [
                  {
                    "name": "doc_ids",
                    "value": [
                      "chapter1.pdf",
                      "chapter2.pdf",
                      "chapter3.pdf"
                    ]
                  },
                  {
                    "name": "output_name",
                    "value": "book_draft.pdf"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1143,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "redact_sensitive_information",
                "arguments": [
                  {
                    "name": "document_id",
                    "type": "string",
                    "desc": "Document to redact"
                  },
                  {
                    "name": "fields",
                    "type": "list",
                    "desc": "List of sensitive fields to redact (e.g., SSN, emails)"
                  }
                ]
              }
            ],
            "instruction": "Redact SSNs and credit card numbers from 'hr_onboarding.pdf'.",
            "tool_steps": [
              "Step 1: Scan document for sensitive patterns and redact them. Step 2: Return redacted copy and log."
            ],
            "tool_nodes": [
              {
                "task": "redact_sensitive_information",
                "arguments": [
                  {
                    "name": "document_id",
                    "value": "hr_onboarding.pdf"
                  },
                  {
                    "name": "fields",
                    "value": [
                      "SSN",
                      "credit_card"
                    ]
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1144,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "redact_sensitive_information",
                "arguments": [
                  {
                    "name": "document_id",
                    "type": "string",
                    "desc": "Document to redact"
                  },
                  {
                    "name": "fields",
                    "type": "list",
                    "desc": "List of sensitive fields to redact (e.g., SSN, emails)"
                  }
                ]
              }
            ],
            "instruction": "Remove email addresses and phone numbers from 'marketing_leads_2025.csv'.",
            "tool_steps": [
              "Step 1: Scan document for sensitive patterns and redact them. Step 2: Return redacted copy and log."
            ],
            "tool_nodes": [
              {
                "task": "redact_sensitive_information",
                "arguments": [
                  {
                    "name": "document_id",
                    "value": "marketing_leads_2025.csv"
                  },
                  {
                    "name": "fields",
                    "value": [
                      "email",
                      "phone"
                    ]
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1145,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "compare_two_documents",
                "arguments": [
                  {
                    "name": "doc_a",
                    "type": "string",
                    "desc": "First document identifier"
                  },
                  {
                    "name": "doc_b",
                    "type": "string",
                    "desc": "Second document identifier"
                  }
                ]
              }
            ],
            "instruction": "Compare 'contract_draft_A.docx' with 'contract_draft_B.docx' and list differences.",
            "tool_steps": [
              "Step 1: Perform diff between the two documents and summarize additions, deletions, and edits."
            ],
            "tool_nodes": [
              {
                "task": "compare_two_documents",
                "arguments": [
                  {
                    "name": "doc_a",
                    "value": "contract_draft_A.docx"
                  },
                  {
                    "name": "doc_b",
                    "value": "contract_draft_B.docx"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1146,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "compare_two_documents",
                "arguments": [
                  {
                    "name": "doc_a",
                    "type": "string",
                    "desc": "First document identifier"
                  },
                  {
                    "name": "doc_b",
                    "type": "string",
                    "desc": "Second document identifier"
                  }
                ]
              }
            ],
            "instruction": "Compare 'spec_v1.pdf' against 'spec_v2.pdf' and output a change summary by section.",
            "tool_steps": [
              "Step 1: Perform diff between the two documents and summarize additions, deletions, and edits."
            ],
            "tool_nodes": [
              {
                "task": "compare_two_documents",
                "arguments": [
                  {
                    "name": "doc_a",
                    "value": "spec_v1.pdf"
                  },
                  {
                    "name": "doc_b",
                    "value": "spec_v2.pdf"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1147,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "extract_data_from_website",
                "arguments": [
                  {
                    "name": "website_url",
                    "type": "string",
                    "desc": "URL to scrape or extract from"
                  },
                  {
                    "name": "selectors",
                    "type": "string",
                    "desc": "CSS selectors or data points to extract"
                  }
                ]
              }
            ],
            "instruction": "Extract product titles and prices from 'https://shop.example.com/category/widgets'.",
            "tool_steps": [
              "Step 1: Fetch page(s) and extract data using selectors; return structured table."
            ],
            "tool_nodes": [
              {
                "task": "extract_data_from_website",
                "arguments": [
                  {
                    "name": "website_url",
                    "value": "https://shop.example.com/category/widgets"
                  },
                  {
                    "name": "selectors",
                    "value": "div.product-title; span.price"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1148,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "extract_data_from_website",
                "arguments": [
                  {
                    "name": "website_url",
                    "type": "string",
                    "desc": "URL to scrape or extract from"
                  },
                  {
                    "name": "selectors",
                    "type": "string",
                    "desc": "CSS selectors or data points to extract"
                  }
                ]
              }
            ],
            "instruction": "Scrape headlines and publish dates from 'https://news.example.com' front page.",
            "tool_steps": [
              "Step 1: Fetch page(s) and extract data using selectors; return structured table."
            ],
            "tool_nodes": [
              {
                "task": "extract_data_from_website",
                "arguments": [
                  {
                    "name": "website_url",
                    "value": "https://news.example.com"
                  },
                  {
                    "name": "selectors",
                    "value": "h2.headline; time.pubdate"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1149,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "perform_sentiment_analysis_on_text",
                "arguments": [
                  {
                    "name": "text_id",
                    "type": "string",
                    "desc": "Identifier or snippet of text to analyze"
                  },
                  {
                    "name": "language",
                    "type": "string",
                    "desc": "Language code of the text"
                  }
                ]
              }
            ],
            "instruction": "Perform sentiment analysis on customer feedback batch 'fb_sep_2025' and summarize sentiment distribution.",
            "tool_steps": [
              "Step 1: Run sentiment model on provided texts and aggregate results by category."
            ],
            "tool_nodes": [
              {
                "task": "perform_sentiment_analysis_on_text",
                "arguments": [
                  {
                    "name": "text_id",
                    "value": "fb_sep_2025"
                  },
                  {
                    "name": "language",
                    "value": "en"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1150,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "perform_sentiment_analysis_on_text",
                "arguments": [
                  {
                    "name": "text_id",
                    "type": "string",
                    "desc": "Identifier or snippet of text to analyze"
                  },
                  {
                    "name": "language",
                    "type": "string",
                    "desc": "Language code of the text"
                  }
                ]
              }
            ],
            "instruction": "Analyze social media mentions 'mentions_sep_week1' for sentiment and surface top negative themes.",
            "tool_steps": [
              "Step 1: Run sentiment model on provided texts and aggregate results by category."
            ],
            "tool_nodes": [
              {
                "task": "perform_sentiment_analysis_on_text",
                "arguments": [
                  {
                    "name": "text_id",
                    "value": "mentions_sep_week1"
                  },
                  {
                    "name": "language",
                    "value": "en"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1151,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "create_qr_code",
                "arguments": [
                  {
                    "name": "payload",
                    "type": "string",
                    "desc": "Data to encode in the QR code"
                  },
                  {
                    "name": "size",
                    "type": "string",
                    "desc": "Image size or resolution"
                  }
                ]
              }
            ],
            "instruction": "Create a QR code encoding 'https://example.com/event?ticket=12345' at 300x300 pixels.",
            "tool_steps": [
              "Step 1: Generate QR code image with the specified payload and size."
            ],
            "tool_nodes": [
              {
                "task": "create_qr_code",
                "arguments": [
                  {
                    "name": "payload",
                    "value": "https://example.com/event?ticket=12345"
                  },
                  {
                    "name": "size",
                    "value": "300x300"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1152,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "create_qr_code",
                "arguments": [
                  {
                    "name": "payload",
                    "type": "string",
                    "desc": "Data to encode in the QR code"
                  },
                  {
                    "name": "size",
                    "type": "string",
                    "desc": "Image size or resolution"
                  }
                ]
              }
            ],
            "instruction": "Generate a QR code for text 'Wifi: MyNet Password: Welcome123' size 250x250.",
            "tool_steps": [
              "Step 1: Generate QR code image with the specified payload and size."
            ],
            "tool_nodes": [
              {
                "task": "create_qr_code",
                "arguments": [
                  {
                    "name": "payload",
                    "value": "Wifi: MyNet Password: Welcome123"
                  },
                  {
                    "name": "size",
                    "value": "250x250"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1153,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "compress_file",
                "arguments": [
                  {
                    "name": "file_path",
                    "type": "string",
                    "desc": "Path to file or folder to compress"
                  },
                  {
                    "name": "compression_format",
                    "type": "string",
                    "desc": "Format to use, e.g., zip, tar.gz"
                  }
                ]
              }
            ],
            "instruction": "Compress folder 'project_docs' into a zip archive 'project_docs_2025.zip'.",
            "tool_steps": [
              "Step 1: Archive and compress the given file/folder into desired format."
            ],
            "tool_nodes": [
              {
                "task": "compress_file",
                "arguments": [
                  {
                    "name": "file_path",
                    "value": "project_docs"
                  },
                  {
                    "name": "compression_format",
                    "value": "zip"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "my_id": 1154,
            "n_tools": 1,
            "sampled_nodes": [
              {
                "task": "compress_file",
                "arguments": [
                  {
                    "name": "file_path",
                    "type": "string",
                    "desc": "Path to file or folder to compress"
                  },
                  {
                    "name": "compression_format",
                    "type": "string",
                    "desc": "Format to use, e.g., zip, tar.gz"
                  }
                ]
              }
            ],
            "instruction": "Create a tar.gz archive of 'logs/2025-09' named 'logs_sep_2025.tar.gz'.",
            "tool_steps": [
              "Step 1: Archive and compress the given file/folder into desired format."
            ],
            "tool_nodes": [
              {
                "task": "compress_file",
                "arguments": [
                  {
                    "name": "file_path",
                    "value": "logs/2025-09"
                  },
                  {
                    "name": "compression_format",
                    "value": "tar.gz"
                  }
                ]
              }
            ],
            "category": "data",
            "synthetic": true
          },
          {
            "id": 16752007,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "play_movie_by_title",
                    "arguments": [
                        {
                            "name": "title",
                            "type": "string",
                            "desc": "The title of the movie to play"
                        }
                    ]
                }
            ],
            "instruction": "I've heard a lot about the film Inception and haven't had the chance to watch it yet. Can you play it for me?",
            "tool_steps": [
                "Step 1: Use the play_movie_by_title API, inputting the title 'Inception'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "title",
                            "value": "Inception"
                        }
                    ],
                    "task": "play_movie_by_title"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2001
        },
        {
            "id": 16070773,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "play_movie_by_title",
                    "arguments": [
                        {
                            "name": "title",
                            "type": "string",
                            "desc": "The title of the movie to play"
                        }
                    ]
                }
            ],
            "instruction": "I'm in a mood for a thriller! Can you stream The Dark Knight for me?",
            "tool_steps": [
                "Set the request in play_movie_by_title API to stream the movie: 'The Dark Knight'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "title",
                            "value": "The Dark Knight"
                        }
                    ],
                    "task": "play_movie_by_title"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2002
        },
        {
            "id": 11501998,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "play_movie_by_title",
                    "arguments": [
                        {
                            "name": "title",
                            "type": "string",
                            "desc": "The title of the movie to play"
                        }
                    ]
                }
            ],
            "instruction": "I've had a long day and I'd love to relax and unwind with a movie. Can you play The Shawshank Redemption for me, please?",
            "tool_steps": [
                "Step 1: Trigger the play_movie_by_title function with the title parameter set as 'The Shawshank Redemption'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "title",
                            "value": "The Shawshank Redemption"
                        }
                    ],
                    "task": "play_movie_by_title"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2003
        },
        {
            "id": 20436096,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "make_video_call",
                    "arguments": [
                        {
                            "name": "phone_number",
                            "type": "string",
                            "desc": "The phone number to make the video call to"
                        }
                    ]
                }
            ],
            "instruction": "I've been meaning to get in touch with a colleague. Can you help me initiate a video call to the number 1234567890?",
            "tool_steps": [
                "Step 1: Initiate a video call using make_video_call API with phone_number: '1234567890'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "phone_number",
                            "value": "1234567890"
                        }
                    ],
                    "task": "make_video_call"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2004
        },
        {
            "id": 51703720,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "make_video_call",
                    "arguments": [
                        {
                            "name": "phone_number",
                            "type": "string",
                            "desc": "The phone number to make the video call to"
                        }
                    ]
                }
            ],
            "instruction": "I've been planning to catch up with an old friend over a video call for some time now. Can you help me make a video call to +17185551234?",
            "tool_steps": [
                "Step 1: Invoke the make_video_call API with phone_number: '+17185551234'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "phone_number",
                            "value": "+17185551234"
                        }
                    ],
                    "task": "make_video_call"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2005
        },
        {
            "id": 81481782,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "make_video_call",
                    "arguments": [
                        {
                            "name": "phone_number",
                            "type": "string",
                            "desc": "The phone number to make the video call to"
                        }
                    ]
                }
            ],
            "instruction": "I've been missing my family and I want to reconnect with them. Can we start a video call to my family's home number, which is 1234567890?",
            "tool_steps": [
                "Initiating the make_video_call API for the home number 1234567890."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "phone_number",
                            "value": "1234567890"
                        }
                    ],
                    "task": "make_video_call"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2006
        },
        {
            "id": 32060214,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "print_document",
                    "arguments": [
                        {
                            "name": "document",
                            "type": "string",
                            "desc": "The document to print"
                        }
                    ]
                }
            ],
            "instruction": "I've been working on a document named 'example.pdf'. I think it's finally ready for a hard copy. Can you assist me print it out?",
            "tool_steps": [
                "Step 1: Execute the print_document API function using 'example.pdf' as the document to be printed."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "document",
                            "value": "example.pdf"
                        }
                    ],
                    "task": "print_document"
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2007
        },
        {
            "id": 10857849,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "print_document",
                    "arguments": [
                        {
                            "name": "document",
                            "type": "string",
                            "desc": "The document to print"
                        }
                    ]
                }
            ],
            "instruction": "I'm done preparing for my meeting and I need the 'example.pdf' document printed out. Could you please assist me with that?",
            "tool_steps": [
                "Step 1: Invoke the print_document API with 'example.pdf' as the document."
            ],
            "tool_nodes": [
                {
                    "task": "print_document",
                    "arguments": [
                        {
                            "name": "document",
                            "value": "example.pdf"
                        }
                    ]
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2008
        },
        {
            "id": 12878163,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "print_document",
                    "arguments": [
                        {
                            "name": "document",
                            "type": "string",
                            "desc": "The document to print"
                        }
                    ]
                }
            ],
            "instruction": "I am going to apply for a job tomorrow, and I need my resume ready. Can you assist me in printing the 'my resume.pdf' document?",
            "tool_steps": [
                "Step 1: Invoke the print_document API with the document parameter set as 'my resume.pdf'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "document",
                            "value": "my resume.pdf"
                        }
                    ],
                    "task": "print_document"
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2009
        },
        {
            "id": 26296998,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "make_voice_call",
                    "arguments": [
                        {
                            "name": "phone_number",
                            "type": "string",
                            "desc": "The phone number to make the voice call to"
                        }
                    ]
                }
            ],
            "instruction": "I'm having trouble reaching out to my client. Can you make a voice call to the phone number 123-456-7890 on my behalf?",
            "tool_steps": [
                "Step 1: Initiate a phone call by invoking the function 'make_voice_call' with the client\u2019s phone number: '123-456-7890'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "phone_number",
                            "value": "123-456-7890"
                        }
                    ],
                    "task": "make_voice_call"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2010
        },
        {
            "id": 32841900,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "make_voice_call",
                    "arguments": [
                        {
                            "name": "phone_number",
                            "type": "string",
                            "desc": "The phone number to make the voice call to"
                        }
                    ]
                }
            ],
            "instruction": "I need to get in touch with my colleague urgently. Can you place a voice call to this number for me - 555-123-4567?",
            "tool_steps": [
                "Step 1: Initiate make_voice_call activity with this phone_number: '555-123-4567'"
            ],
            "tool_nodes": [
                {
                    "task": "make_voice_call",
                    "arguments": [
                        {
                            "name": "phone_number",
                            "value": "555-123-4567"
                        }
                    ]
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2011
        },
        {
            "id": 30703133,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "stock_operation",
                    "arguments": [
                        {
                            "name": "stock",
                            "type": "string",
                            "desc": "The stock to do the operation on"
                        },
                        {
                            "name": "operation",
                            "type": "string",
                            "desc": "The operation to do, eg. buy, sell, short, cover etc."
                        }
                    ]
                }
            ],
            "instruction": "I have been checking out Apple's recent performance and I'm rather convinced it's a good time to make an investment. Could you help me purchase some AAPL stocks?",
            "tool_steps": [
                "Initiate the stock_operation program with the parameters set for purchasing ('buy') of Apple Inc.'s stock ('AAPL')"
            ],
            "tool_nodes": [
                {
                    "task": "stock_operation",
                    "arguments": [
                        {
                            "name": "stock",
                            "value": "AAPL"
                        },
                        {
                            "name": "operation",
                            "value": "buy"
                        }
                    ]
                }
            ],
            "category": "finance",
            "synthetic": false,
            "my_id": 2012
        },
        {
            "id": 25551563,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "stock_operation",
                    "arguments": [
                        {
                            "name": "stock",
                            "type": "string",
                            "desc": "The stock to do the operation on"
                        },
                        {
                            "name": "operation",
                            "type": "string",
                            "desc": "The operation to do, eg. buy, sell, short, cover etc."
                        }
                    ]
                }
            ],
            "instruction": "Recently, I've been looking into investing in the tech industry and Microsoft caught my eye. Could you assist me in purchasing some Microsoft (MSFT) stocks by using the stock_operation API?",
            "tool_steps": [
                "Step 1: Initiate the stock_operation API with the specified stock- 'MSFT' and operation- 'buy'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "stock",
                            "value": "MSFT"
                        },
                        {
                            "name": "operation",
                            "value": "buy"
                        }
                    ],
                    "task": "stock_operation"
                }
            ],
            "category": "finance",
            "synthetic": false,
            "my_id": 2013
        },
        {
            "id": 24713920,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "book_car",
                    "arguments": [
                        {
                            "name": "date",
                            "type": "date",
                            "desc": "The date to book the car for"
                        },
                        {
                            "name": "location",
                            "type": "string",
                            "desc": "The location to book the car in"
                        }
                    ]
                }
            ],
            "instruction": "I am planning to travel to New York City on December 15, 2022. Could you help me arrange a rental car for the trip?",
            "tool_steps": [
                "Step 1: Make use of the book_car API, indicating the date as '2022-12-15' and the location as 'New York City'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "date",
                            "value": "2022-12-15"
                        },
                        {
                            "name": "location",
                            "value": "New York City"
                        }
                    ],
                    "task": "book_car"
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2015
        },
        {
            "id": 28524086,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "book_car",
                    "arguments": [
                        {
                            "name": "date",
                            "type": "date",
                            "desc": "The date to book the car for"
                        },
                        {
                            "name": "location",
                            "type": "string",
                            "desc": "The location to book the car in"
                        }
                    ]
                }
            ],
            "instruction": "I'm planning a trip to Los Angeles and I'm scheduled to arrive on August 15th, 2022. Could you assist me in securing a rental car for that period?",
            "tool_steps": [
                "Step 1: Invoke the 'book_car' action with a date of '2022-08-15' and destination 'Los Angeles'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "date",
                            "value": "2022-08-15"
                        },
                        {
                            "name": "location",
                            "value": "Los Angeles"
                        }
                    ],
                    "task": "book_car"
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2016
        },
        {
            "id": 27138398,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "order_taxi",
                    "arguments": [
                        {
                            "name": "location",
                            "type": "string",
                            "desc": "The location to order the taxi to"
                        },
                        {
                            "name": "platform",
                            "type": "string",
                            "desc": "The platform to order the taxi at, eg. Uber, Didi etc."
                        }
                    ]
                }
            ],
            "instruction": "I've been working late at the office at 123 Example St and I'd rather not take the bus. Could you help me get an Uber home?",
            "tool_steps": [
                "Initiate the order_taxi API, setting the pick-up location as '123 Example St' and the service as 'Uber'"
            ],
            "tool_nodes": [
                {
                    "task": "order_taxi",
                    "arguments": [
                        {
                            "name": "location",
                            "value": "123 Example St"
                        },
                        {
                            "name": "platform",
                            "value": "Uber"
                        }
                    ]
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2017
        },
        {
            "id": 20499679,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "order_taxi",
                    "arguments": [
                        {
                            "name": "location",
                            "type": "string",
                            "desc": "The location to order the taxi to"
                        },
                        {
                            "name": "platform",
                            "type": "string",
                            "desc": "The platform to order the taxi at, eg. Uber, Didi etc."
                        }
                    ]
                }
            ],
            "instruction": "I'm currently at a meeting downtown and it looks like it's about to end. Could you help me book an Uber ride to Central Station?",
            "tool_steps": [
                "Step 1: Initiate the order_taxi function, specifying both 'Central Station' as the destination and 'Uber' as the chosen platform"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "location",
                            "value": "Central Station"
                        },
                        {
                            "name": "platform",
                            "value": "Uber"
                        }
                    ],
                    "task": "order_taxi"
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2018
        },
        {
            "id": 27403715,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "online_banking",
                    "arguments": [
                        {
                            "name": "instruction",
                            "type": "string",
                            "desc": "The banking instruction to do, eg. transfer, deposit, withdraw etc."
                        },
                        {
                            "name": "amount",
                            "type": "integer",
                            "desc": "The value in USD of the banking operation."
                        },
                        {
                            "name": "bank",
                            "type": "string",
                            "desc": "The bank to do the banking operation at"
                        }
                    ]
                }
            ],
            "instruction": "I'm planning to send $150 certain amount of money to my friend who has an account at Bank of America. Could you help me initiate the money transfer?",
            "tool_steps": [
                "Step 1: Invoke the online_banking API with instruction set to 'money transfer' and the specific destination being 'Bank of America'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "instruction",
                            "value": "money transfer"
                        },
                        {
                            "name": "bank",
                            "value": "Bank of America"
                        },
                        {
                            "name": "amount",
                            "value": 150
                        }
                    ],
                    "task": "online_banking"
                }
            ],
            "category": "finance",
            "synthetic": false,
            "my_id": 2019
        },
        {
            "id": 16791022,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "online_banking",
                    "arguments": [
                        {
                            "name": "instruction",
                            "type": "string",
                            "desc": "The banking instruction to do, eg. transfer, deposit, withdraw etc."
                        },
                        {
                            "name": "amount",
                            "type": "integer",
                            "desc": "The value in USD of the banking operation."
                        },
                        {
                            "name": "bank",
                            "type": "string",
                            "desc": "The bank to do the banking operation at"
                        }
                    ]
                }
            ],
            "instruction": "Hey, Assistant. I would like to support my friend financially. Could you help me transfer $500 from my account in Bank A to my friend's account that is also in the same bank?",
            "tool_steps": [
                "Step 1: Assist with online banking by initiating a 'money transfer' for 'Bank A', setting the 'amount' to $500 to be sent to a 'friend's' account"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "instruction",
                            "value": "money transfer"
                        },
                        {
                            "name": "bank",
                            "value": "Bank A"
                        },
                        {
                            "name": "amount",
                            "value": 500
                        }
                    ],
                    "task": "online_banking"
                }
            ],
            "category": "finance",
            "synthetic": false,
            "my_id": 2020
        },
        {
            "id": 23442036,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "get_weather",
                    "arguments": [
                        {
                            "name": "location",
                            "type": "string",
                            "desc": "The location to get the weather for"
                        },
                        {
                            "name": "date",
                            "type": "date",
                            "desc": "The date to get the weather for"
                        }
                    ]
                }
            ],
            "instruction": "I'm planning a visit to New York City on October 15th, 2022. Could you check what the weather will be like on that day?",
            "tool_steps": [
                "Invoke the get_weather API, inputting 'New York City' in the location parameter and '2022-10-15' as the date."
            ],
            "tool_nodes": [
                {
                    "task": "get_weather",
                    "arguments": [
                        {
                            "name": "location",
                            "value": "New York City"
                        },
                        {
                            "name": "date",
                            "value": "2022-10-15"
                        }
                    ]
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2021
        },
        {
            "id": 97439754,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "get_weather",
                    "arguments": [
                        {
                            "name": "location",
                            "type": "string",
                            "desc": "The location to get the weather for"
                        },
                        {
                            "name": "date",
                            "type": "date",
                            "desc": "The date to get the weather for"
                        }
                    ]
                }
            ],
            "instruction": "I have a planned trip to San Francisco on October 30, 2022. Can you help me find out what the weather will be like on that day?",
            "tool_steps": [
                "Step 1: Invoke the get_weather tool with the provided location 'San Francisco' and the specific date '2022-10-30'."
            ],
            "tool_nodes": [
                {
                    "task": "get_weather",
                    "arguments": [
                        {
                            "name": "location",
                            "value": "San Francisco"
                        },
                        {
                            "name": "date",
                            "value": "2022-10-30"
                        }
                    ]
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2022
        },
        {
            "id": 17381039,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "get_weather",
                    "arguments": [
                        {
                            "name": "location",
                            "type": "string",
                            "desc": "The location to get the weather for"
                        },
                        {
                            "name": "date",
                            "type": "date",
                            "desc": "The date to get the weather for"
                        }
                    ]
                }
            ],
            "instruction": "I'm planning to take a trip to New York City on May 1st, 2023. Can you provide me the weather forecast for that day?",
            "tool_steps": [
                "Step 1: Fetch the weather report for 'New York City' on '2023-05-01' by using the get_weather function."
            ],
            "tool_nodes": [
                {
                    "task": "get_weather",
                    "arguments": [
                        {
                            "name": "location",
                            "value": "New York City"
                        },
                        {
                            "name": "date",
                            "value": "2023-05-01"
                        }
                    ]
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2023
        },
        {
            "id": 17768882,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "order_food_delivery",
                    "arguments": [
                        {
                            "name": "food",
                            "type": "string",
                            "desc": "The food to order"
                        },
                        {
                            "name": "location",
                            "type": "string",
                            "desc": "The location to deliver the food to"
                        },
                        {
                            "name": "platform",
                            "type": "string",
                            "desc": "The platform to order the food at, eg. Uber Eats, Meituan Waimai etc."
                        }
                    ]
                }
            ],
            "instruction": "I have been craving sushi all day. Can you organize a sushi delivery to my house, on 123 Main St, through the Uber Eats service?",
            "tool_steps": [
                "Step 1: Trigger the order_food_delivery function with food type as: 'sushi', delivery location as: '123 Main St', and utilizing the platform: 'Uber Eats'"
            ],
            "tool_nodes": [
                {
                    "task": "order_food_delivery",
                    "arguments": [
                        {
                            "name": "food",
                            "value": "sushi"
                        },
                        {
                            "name": "location",
                            "value": "123 Main St"
                        },
                        {
                            "name": "platform",
                            "value": "Uber Eats"
                        }
                    ]
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2024
        },
        {
            "id": 21800311,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "order_food_delivery",
                    "arguments": [
                        {
                            "name": "food",
                            "type": "string",
                            "desc": "The food to order"
                        },
                        {
                            "name": "location",
                            "type": "string",
                            "desc": "The location to deliver the food to"
                        },
                        {
                            "name": "platform",
                            "type": "string",
                            "desc": "The platform to order the food at, eg. Uber Eats, Meituan Waimai etc."
                        }
                    ]
                }
            ],
            "instruction": "I've had a long day at work and really craving a slice of pizza, but I cannot go out. Could you help order a pizza for me and get it delivered to my place, which is 123 Main St, using Uber Eats?",
            "tool_steps": [
                "Step 1: Invoke the order_food_delivery functionality with: food parameter set to 'Pizza', location set to '123 Main St', and the platform to 'Uber Eats'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "food",
                            "value": "Pizza"
                        },
                        {
                            "name": "location",
                            "value": "123 Main St"
                        },
                        {
                            "name": "platform",
                            "value": "Uber Eats"
                        }
                    ],
                    "task": "order_food_delivery"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2025
        },
        {
            "id": 27175809,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "order_food_delivery",
                    "arguments": [
                        {
                            "name": "food",
                            "type": "string",
                            "desc": "The food to order"
                        },
                        {
                            "name": "location",
                            "type": "string",
                            "desc": "The location to deliver the food to"
                        },
                        {
                            "name": "platform",
                            "type": "string",
                            "desc": "The platform to order the food at, eg. Uber Eats, Meituan Waimai etc."
                        }
                    ]
                }
            ],
            "instruction": "I've had a long day, and I don't feel like cooking. I'm really craving a pizza right now. Can you arrange to order one for me from Uber Eats and get it delivered to my place at 123 Example Street?",
            "tool_steps": [
                "Step 1: Invoke the order_food_delivery API with parameters: food='Pizza', location='123 Example Street', and platform='Uber Eats'"
            ],
            "tool_nodes": [
                {
                    "task": "order_food_delivery",
                    "arguments": [
                        {
                            "name": "food",
                            "value": "Pizza"
                        },
                        {
                            "name": "location",
                            "value": "123 Example Street"
                        },
                        {
                            "name": "platform",
                            "value": "Uber Eats"
                        }
                    ]
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2026
        },
        {
            "id": 10162545,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "book_hotel",
                    "arguments": [
                        {
                            "name": "date",
                            "type": "date",
                            "desc": "The date to book the hotel for"
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "desc": "The name of the hotel to book"
                        }
                    ]
                }
            ],
            "instruction": "I'm planning a trip and I need to make a reservation at the Example Hotel. Can you book it for me on October 15th, 2022?",
            "tool_steps": [
                "Step 1: Trigger the book_hotel API, setting the date to '2022-10-15' and the hotel name to 'Example Hotel'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "date",
                            "value": "2022-10-15"
                        },
                        {
                            "name": "name",
                            "value": "Example Hotel"
                        }
                    ],
                    "task": "book_hotel"
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2027
        },
        {
            "id": 91737059,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "book_hotel",
                    "arguments": [
                        {
                            "name": "date",
                            "type": "date",
                            "desc": "The date to book the hotel for"
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "desc": "The name of the hotel to book"
                        }
                    ]
                }
            ],
            "instruction": "I'm planning a business trip and need to secure accommodation. Can you help me reserve a room at the Hilton Riverfront hotel on November 25th, 2022?",
            "tool_steps": [
                "Step 1: Invoke the 'book_hotel' API, setting 'date' as '2022-11-25' and the 'name' as 'Hilton Riverfront'"
            ],
            "tool_nodes": [
                {
                    "task": "book_hotel",
                    "arguments": [
                        {
                            "name": "date",
                            "value": "2022-11-25"
                        },
                        {
                            "name": "name",
                            "value": "Hilton Riverfront"
                        }
                    ]
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2028
        },
        {
            "id": 13714862,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "pay_for_credit_card",
                    "arguments": [
                        {
                            "name": "credit_card",
                            "type": "string",
                            "desc": "The credit card to pay for"
                        }
                    ]
                }
            ],
            "instruction": "I'm currently preoccupied and won't be able to make a payment on my credit card ending in 3456. Can you assist me in completing the payment?",
            "tool_steps": [
                "Step 1: Call the 'pay_for_credit_card' API with the parameter 'credit_card: **** **** **** 3456'"
            ],
            "tool_nodes": [
                {
                    "task": "pay_for_credit_card",
                    "arguments": [
                        {
                            "name": "credit_card",
                            "value": "**** **** **** 3456"
                        }
                    ]
                }
            ],
            "category": "finance",
            "synthetic": false,
            "my_id": 2029
        },
        {
            "id": 18397156,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "pay_for_credit_card",
                    "arguments": [
                        {
                            "name": "credit_card",
                            "type": "string",
                            "desc": "The credit card to pay for"
                        }
                    ]
                }
            ],
            "instruction": "I've been using my credit card 4012888888881881 frequently. Can you assist me in making the payment for it?",
            "tool_steps": [
                "Step 1: Initiate the process to pay for credit card 4012888888881881 by calling the pay_for_credit_card API."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "credit_card",
                            "value": "4012888888881881"
                        }
                    ],
                    "task": "pay_for_credit_card"
                }
            ],
            "category": "finance",
            "synthetic": false,
            "my_id": 2030
        },
        {
            "id": 11279321,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "online_shopping",
                    "arguments": [
                        {
                            "name": "website",
                            "type": "string",
                            "desc": "The website to buy the product from, eg. Amazon, Ebay, Taobao etc."
                        },
                        {
                            "name": "product",
                            "type": "string",
                            "desc": "The product to buy"
                        }
                    ]
                }
            ],
            "instruction": "I've been looking into expanding my gadget collection. Can you assist me in finding a pair of wireless headphones on Amazon?",
            "tool_steps": [
                "First, let's browse through Amazon using the online_shopping API, specifically looking for Wireless Headphones."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "website",
                            "value": "Amazon"
                        },
                        {
                            "name": "product",
                            "value": "Wireless Headphones"
                        }
                    ],
                    "task": "online_shopping"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2031
        },
        {
            "id": 26018434,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "online_shopping",
                    "arguments": [
                        {
                            "name": "website",
                            "type": "string",
                            "desc": "The website to buy the product from, eg. Amazon, Ebay, Taobao etc."
                        },
                        {
                            "name": "product",
                            "type": "string",
                            "desc": "The product to buy"
                        }
                    ]
                }
            ],
            "instruction": "I've been searching for a good pair of Bluetooth headphones for a while now. As an assistant, could you please help me purchase one from Amazon?",
            "tool_steps": [
                "Step 1: Invoke the online_shopping API with the following parameters - website: 'Amazon' and product: 'Bluetooth headphones'"
            ],
            "tool_nodes": [
                {
                    "task": "online_shopping",
                    "arguments": [
                        {
                            "name": "website",
                            "value": "Amazon"
                        },
                        {
                            "name": "product",
                            "value": "Bluetooth headphones"
                        }
                    ]
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2032
        },
        {
            "id": 62441232,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "online_shopping",
                    "arguments": [
                        {
                            "name": "website",
                            "type": "string",
                            "desc": "The website to buy the product from, eg. Amazon, Ebay, Taobao etc."
                        },
                        {
                            "name": "product",
                            "type": "string",
                            "desc": "The product to buy"
                        }
                    ]
                }
            ],
            "instruction": "I've decided to upgrade my home workspace with a new gadget and I am thinking of getting a wireless keyboard. Could you assist me in purchasing one from Amazon?",
            "tool_steps": [
                "Step 1: Assist the user to execute online_shopping on website: 'Amazon' for product: 'wireless keyboard'"
            ],
            "tool_nodes": [
                {
                    "task": "online_shopping",
                    "arguments": [
                        {
                            "name": "website",
                            "value": "Amazon"
                        },
                        {
                            "name": "product",
                            "value": "wireless keyboard"
                        }
                    ]
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2033
        },
        {
            "id": 22051382,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "book_flight",
                    "arguments": [
                        {
                            "name": "date",
                            "type": "date",
                            "desc": "The date to book the flight for"
                        },
                        {
                            "name": "from",
                            "type": "string",
                            "desc": "The location to book the flight from"
                        },
                        {
                            "name": "to",
                            "type": "string",
                            "desc": "The location to book the flight to"
                        }
                    ]
                }
            ],
            "instruction": "You know, I've been thinking about spending Christmas in the UK this year. Could you help me book a flight from New York to London on the 25th of December, 2022?",
            "tool_steps": [
                "Step 1: Initiate the book_flight API, providing '2022-12-25' as the date alongside 'New York' as the origin and 'London' as the destination."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "date",
                            "value": "2022-12-25"
                        },
                        {
                            "name": "origin",
                            "value": "New York"
                        },
                        {
                            "name": "destination",
                            "value": "London"
                        }
                    ],
                    "task": "book_flight"
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2034
        },
        {
            "id": 10966416,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "book_flight",
                    "arguments": [
                        {
                            "name": "date",
                            "type": "date",
                            "desc": "The date to book the flight for"
                        },
                        {
                            "name": "from",
                            "type": "string",
                            "desc": "The location to book the flight from"
                        },
                        {
                            "name": "to",
                            "type": "string",
                            "desc": "The location to book the flight to"
                        }
                    ]
                }
            ],
            "instruction": "I'm planning a trip to Europe and one of the cities on my list is London. Can you help me reserve a flight from New York to London on October 15th, 2022?",
            "tool_steps": [
                "Step 1: Use the book_flight API with the date as '2022-10-15', 'from' as New York and 'to' as London."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "date",
                            "value": "2022-10-15"
                        },
                        {
                            "name": "from",
                            "value": "New York"
                        },
                        {
                            "name": "to",
                            "value": "London"
                        }
                    ],
                    "task": "book_flight"
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2035
        },
        {
            "id": 16513760,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "organize_meeting_online",
                    "arguments": [
                        {
                            "name": "topic",
                            "type": "string",
                            "desc": "The topic of the meeting"
                        }
                    ]
                }
            ],
            "instruction": "I'm planning to discuss the latest trends in the blockchain industry. Can you help me arrange an online meeting focused on Blockchain Innovations?",
            "tool_steps": [
                "Step 1: Invoke the 'organize_meeting_online' API with the topic set as 'Blockchain Innovations'."
            ],
            "tool_nodes": [
                {
                    "task": "organize_meeting_online",
                    "arguments": [
                        {
                            "name": "topic",
                            "value": "Blockchain Innovations"
                        }
                    ]
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2036
        },
        {
            "id": 31934586,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "organize_meeting_online",
                    "arguments": [
                        {
                            "name": "topic",
                            "type": "string",
                            "desc": "The topic of the meeting"
                        }
                    ]
                }
            ],
            "instruction": "I've been pondering on the advancements and potential outcomes of AI. Could you help me set up an online meeting to discuss the future implications of AI?",
            "tool_steps": [
                "Step 1: Invoke the organize_meeting_online API with the topic as 'Deliberation on the future implications of Artificial Intelligence'"
            ],
            "tool_nodes": [
                {
                    "task": "organize_meeting_online",
                    "arguments": [
                        {
                            "name": "topic",
                            "value": "Deliberation on the future implications of Artificial Intelligence"
                        }
                    ]
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2037
        },
        {
            "id": 12624429,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "auto_housework_by_robot",
                    "arguments": [
                        {
                            "name": "instruction",
                            "type": "string",
                            "desc": "The instruction to let the robot follow, eg. clean the floor, wash the dishes, do the laundry etc."
                        }
                    ]
                }
            ],
            "instruction": "I've had a long busy day, I'd ideally like to rest now and I hate the idea of cleaning the floor right now. Could you have a robot help me with this task?",
            "tool_steps": [
                "Step 1: Have the 'auto_housework_by_robot' tool execute the task with the instructions to 'clean the floor'"
            ],
            "tool_nodes": [
                {
                    "task": "auto_housework_by_robot",
                    "arguments": [
                        {
                            "name": "instruction",
                            "value": "clean the floor"
                        }
                    ]
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2038
        },
        {
            "id": 18190130,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "auto_housework_by_robot",
                    "arguments": [
                        {
                            "name": "instruction",
                            "type": "string",
                            "desc": "The instruction to let the robot follow, eg. clean the floor, wash the dishes, do the laundry etc."
                        }
                    ]
                }
            ],
            "instruction": "Lately, I've been finding it tough to find time for chores around the house. Could you get a robot to clean my floors for me?",
            "tool_steps": [
                "Step 1: Initiate the auto_housework_by_robot by inputting the instruction to 'clean the floors'"
            ],
            "tool_nodes": [
                {
                    "task": "auto_housework_by_robot",
                    "arguments": [
                        {
                            "name": "instruction",
                            "value": "clean the floors"
                        }
                    ]
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2039
        },
        {
            "id": 22197848,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "auto_housework_by_robot",
                    "arguments": [
                        {
                            "name": "instruction",
                            "type": "string",
                            "desc": "The instruction to let the robot follow, eg. clean the floor, wash the dishes, do the laundry etc."
                        }
                    ]
                }
            ],
            "instruction": "I've been incredibly busy lately and haven't had the time to maintain cleanliness at home. Could you assist me by having a robot clean the floors for me?",
            "tool_steps": [
                "Step 1: Engage the auto_housework_by_robot API with the instruction 'clean the floors'."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "instruction",
                            "value": "clean the floors"
                        }
                    ],
                    "task": "auto_housework_by_robot"
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2040
        },
        {
            "id": 65017853,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "search_by_engine",
                    "arguments": [
                        {
                            "name": "query",
                            "type": "string",
                            "desc": "The content to search"
                        },
                        {
                            "name": "engine",
                            "type": "string",
                            "desc": "The search engine to use, eg. Google, Bing, Baidu etc."
                        }
                    ]
                }
            ],
            "instruction": "I am considering upgrading my old phone to something more current. Can you help me find a list of the most popular smartphones this year, according to Google's search results?",
            "tool_steps": [
                "Step 1: Execute the search_by_engine command, looking for the query 'top smartphones 2022' using Google as the search engine."
            ],
            "tool_nodes": [
                {
                    "task": "search_by_engine",
                    "arguments": [
                        {
                            "name": "query",
                            "value": "top smartphones 2022"
                        },
                        {
                            "name": "engine",
                            "value": "Google"
                        }
                    ]
                }
            ],
            "category": "data",
            "synthetic": false,
            "my_id": 2041
        },
        {
            "id": 50284050,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "search_by_engine",
                    "arguments": [
                        {
                            "name": "query",
                            "type": "string",
                            "desc": "The content to search"
                        },
                        {
                            "name": "engine",
                            "type": "string",
                            "desc": "The search engine to use, eg. Google, Bing, Baidu etc."
                        }
                    ]
                }
            ],
            "instruction": "I'm planning to buy a new laptop and my budget is around 1000 dollars. Can you use Google to find the best options for me?",
            "tool_steps": [
                "Step 1: Invoke the search_by_engine API using the query 'best laptops under 1000 dollars' on the Google search engine."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "query",
                            "value": "best laptops under 1000 dollars"
                        },
                        {
                            "name": "engine",
                            "value": "Google"
                        }
                    ],
                    "task": "search_by_engine"
                }
            ],
            "category": "data",
            "synthetic": false,
            "my_id": 2042
        },
        {
            "id": 14813305,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "enroll_in_course",
                    "arguments": [
                        {
                            "name": "course",
                            "type": "string",
                            "desc": "The course to enroll in"
                        },
                        {
                            "name": "university",
                            "type": "string",
                            "desc": "The university to enroll in the course at"
                        }
                    ]
                }
            ],
            "instruction": "Currently, I am fascinated by the field of Computer Science, I'm considering enrolling at Example University. Could you help me with the enrollment process?",
            "tool_steps": [
                "Step 1: Initiate the course enrollment process at 'Example University' for the 'Computer Science' course using the enroll_in_course API."
            ],
            "tool_nodes": [
                {
                    "task": "enroll_in_course",
                    "arguments": [
                        {
                            "name": "course",
                            "value": "Computer Science"
                        },
                        {
                            "name": "university",
                            "value": "Example University"
                        }
                    ]
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2043
        },
        {
            "id": 13312030,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "enroll_in_course",
                    "arguments": [
                        {
                            "name": "course",
                            "type": "string",
                            "desc": "The course to enroll in"
                        },
                        {
                            "name": "university",
                            "type": "string",
                            "desc": "The university to enroll in the course at"
                        }
                    ]
                }
            ],
            "instruction": "I've been pondering over the idea of expanding my knowledge by studying Computer Science. Do you think you can assist me with enrolling in the Computer Science course at Example University?",
            "tool_steps": [
                "Step 1: Invoke the 'enroll_in_course' function with the respective parameters being 'Computer Science' as course and 'Example University' as university. This action would automate your enrollment process."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "course",
                            "value": "Computer Science"
                        },
                        {
                            "name": "university",
                            "value": "Example University"
                        }
                    ],
                    "task": "enroll_in_course"
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2044
        },
        {
            "id": 32007807,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "enroll_in_course",
                    "arguments": [
                        {
                            "name": "course",
                            "type": "string",
                            "desc": "The course to enroll in"
                        },
                        {
                            "name": "university",
                            "type": "string",
                            "desc": "The university to enroll in the course at"
                        }
                    ]
                }
            ],
            "instruction": "Hey, I've been considering broadening my knowledge base and I have an interest in computer programming. Can you help me enroll in the 'Introduction to Computer Science' course at Harvard University?",
            "tool_steps": [
                "Step 1: Call enroll_in_course API with course: 'Introduction to Computer Science' and university: 'Harvard University'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "course",
                            "value": "Introduction to Computer Science"
                        },
                        {
                            "name": "university",
                            "value": "Harvard University"
                        }
                    ],
                    "task": "enroll_in_course"
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2045
        },
        {
            "id": 18717379,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "do_tax_return",
                    "arguments": [
                        {
                            "name": "year",
                            "type": "string",
                            "desc": "The year to do the tax return for"
                        }
                    ]
                }
            ],
            "instruction": "I accumulated a lot of income last year. Can you help me file my tax return for the year 2022?",
            "tool_steps": [
                "Invoke the 'do_tax_return' function for the year '2022'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "year",
                            "value": "2022"
                        }
                    ],
                    "task": "do_tax_return"
                }
            ],
            "category": "finance",
            "synthetic": false,
            "my_id": 2046
        },
        {
            "id": 28554849,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "do_tax_return",
                    "arguments": [
                        {
                            "name": "year",
                            "type": "string",
                            "desc": "The year to do the tax return for"
                        }
                    ]
                }
            ],
            "instruction": "It's becoming overwhelming to keep track of my finances, could you alleviate some of my burden by preparing my tax return for the year 2022?",
            "tool_steps": [
                "Step 1: Invoke the do_tax_return function with 'year' parameter set to '2022'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "year",
                            "value": "2022"
                        }
                    ],
                    "task": "do_tax_return"
                }
            ],
            "category": "finance",
            "synthetic": false,
            "my_id": 2047
        },
        {
            "id": 32936349,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "apply_for_job",
                    "arguments": [
                        {
                            "name": "job",
                            "type": "string",
                            "desc": "The job to apply for"
                        }
                    ]
                }
            ],
            "instruction": "I've noticed a job opening for a Software Developer and I'd really like to apply for it, could you assist me with this?",
            "tool_steps": [
                "Step 1: Invoke the job application service by using the 'apply_for_job' API, specifying that the desired job is 'Software Developer'."
            ],
            "tool_nodes": [
                {
                    "task": "apply_for_job",
                    "arguments": [
                        {
                            "name": "job",
                            "value": "Software Developer"
                        }
                    ]
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2049
        },
        {
            "id": 26022479,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "apply_for_job",
                    "arguments": [
                        {
                            "name": "job",
                            "type": "string",
                            "desc": "The job to apply for"
                        }
                    ]
                }
            ],
            "instruction": "I've been researching various job opportunities and I've found a Software Engineer job that really interests me. Can you assist me in submitting my application for it?",
            "tool_steps": [
                "Step 1: Initiate the apply_for_job API with the 'Software Engineer' setting under the job parameter"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "job",
                            "value": "Software Engineer"
                        }
                    ],
                    "task": "apply_for_job"
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2050
        },
        {
            "id": 31597004,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "apply_for_job",
                    "arguments": [
                        {
                            "name": "job",
                            "type": "string",
                            "desc": "The job to apply for"
                        }
                    ]
                }
            ],
            "instruction": "I have been working on my skills to become a software engineer. Can you help me apply for a Software Engineer position?",
            "tool_steps": [
                "Step 1: Invoke the apply_for_job function with the job parameter set as 'Software Engineer'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "job",
                            "value": "Software Engineer"
                        }
                    ],
                    "task": "apply_for_job"
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2051
        },
        {
            "id": 31269509,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "see_doctor_online",
                    "arguments": [
                        {
                            "name": "disease",
                            "type": "string",
                            "desc": "The disease to see the doctor for"
                        },
                        {
                            "name": "doctor",
                            "type": "string",
                            "desc": "The doctor to see"
                        }
                    ]
                }
            ],
            "instruction": "I've been dealing with a really debilitating migraine. Could you possibly help me set up an online appointment with Dr. Smith to discuss it?",
            "tool_steps": [
                "Step 1: Initiate 'book_virtual_appointment' procedure with ailment: 'migraine' and physician: 'Dr. Smith'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "ailment",
                            "value": "migraine"
                        },
                        {
                            "name": "physician",
                            "value": "Dr. Smith"
                        }
                    ],
                    "task": "book_virtual_appointment"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2052
        },
        {
            "id": 14259468,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "see_doctor_online",
                    "arguments": [
                        {
                            "name": "disease",
                            "type": "string",
                            "desc": "The disease to see the doctor for"
                        },
                        {
                            "name": "doctor",
                            "type": "string",
                            "desc": "The doctor to see"
                        }
                    ]
                }
            ],
            "instruction": "I'm currently experiencing a severe migraine and would like to consult with Dr. Smith online. Can you assist me in setting up an online consultation?",
            "tool_steps": [
                "Step 1: Initiate a see_doctor_online operation specifying 'severe migraine' as the ailment and 'Dr. Smith' as the preferred physician."
            ],
            "tool_nodes": [
                {
                    "task": "see_doctor_online",
                    "arguments": [
                        {
                            "name": "disease",
                            "value": "severe migraine"
                        },
                        {
                            "name": "doctor",
                            "value": "Dr. Smith"
                        }
                    ]
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2053
        },
        {
            "id": 10458093,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "software_management",
                    "arguments": [
                        {
                            "name": "software",
                            "type": "string",
                            "desc": "The software to manage"
                        },
                        {
                            "name": "instruction",
                            "type": "string",
                            "desc": "The instruction to manage the software by, eg. install, uninstall, update etc."
                        }
                    ]
                }
            ],
            "instruction": "I just got a new job where I need to use word processing software. Could you please guide me on how to install Microsoft Word on my computer?",
            "tool_steps": [
                "Step 1: Invoke the software_management tool with these parameters: software set as 'Microsoft Word' and instruction set as 'install'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "software",
                            "value": "Microsoft Word"
                        },
                        {
                            "name": "instruction",
                            "value": "install"
                        }
                    ],
                    "task": "software_management"
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2054
        },
        {
            "id": 12524744,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "software_management",
                    "arguments": [
                        {
                            "name": "software",
                            "type": "string",
                            "desc": "The software to manage"
                        },
                        {
                            "name": "instruction",
                            "type": "string",
                            "desc": "The instruction to manage the software by, eg. install, uninstall, update etc."
                        }
                    ]
                }
            ],
            "instruction": "I've been using Internet Explorer for browsing the web but I've found it to be quite slow lately. Could you help me switch to Google Chrome by installing it on my computer?",
            "tool_steps": [
                "The assistant will invoke the 'software_management' API, specifying 'Google Chrome' as the software to be installed."
            ],
            "tool_nodes": [
                {
                    "task": "software_management",
                    "arguments": [
                        {
                            "name": "software",
                            "value": "Google Chrome"
                        },
                        {
                            "name": "instruction",
                            "value": "install"
                        }
                    ]
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2055
        },
        {
            "id": 23466969,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "set_alarm",
                    "arguments": [
                        {
                            "name": "time",
                            "type": "string",
                            "desc": "The time to set the alarm for"
                        }
                    ]
                }
            ],
            "instruction": "I have an early start tomorrow. Could you help me wake up at 07:30 in the morning?",
            "tool_steps": [
                "Step 1: Invoke the 'set_alarm' function with the following parameter: Time - set to '07:30'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "time",
                            "value": "07:30"
                        }
                    ],
                    "task": "set_alarm"
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2056
        },
        {
            "id": 28723552,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "set_alarm",
                    "arguments": [
                        {
                            "name": "time",
                            "type": "string",
                            "desc": "The time to set the alarm for"
                        }
                    ]
                }
            ],
            "instruction": "I have an important meeting early tomorrow morning. Can you help me set an alarm at 7:00 AM to ensure I don't oversleep?",
            "tool_steps": [
                "Step 1: Use the set_alarm function with the time parameter set to '07:00 AM'"
            ],
            "tool_nodes": [
                {
                    "task": "set_alarm",
                    "arguments": [
                        {
                            "name": "time",
                            "value": "07:00 AM"
                        }
                    ]
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2057
        },
        {
            "id": 80969571,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "sell_item_online",
                    "arguments": [
                        {
                            "name": "item",
                            "type": "string",
                            "desc": "The item to sell"
                        },
                        {
                            "name": "store",
                            "type": "string",
                            "desc": "The online store to sell the item at, eg. Amazon, Ebay, Taobao etc."
                        }
                    ]
                }
            ],
            "instruction": "I have a spare wireless keyboard lying around at home that I no longer use. Can you help me sell it on Amazon?",
            "tool_steps": [
                "Step 1: Initiate the sell_item_online process with item: 'Wireless Keyboard' and store: 'Amazon'"
            ],
            "tool_nodes": [
                {
                    "task": "sell_item_online",
                    "arguments": [
                        {
                            "name": "item",
                            "value": "Wireless Keyboard"
                        },
                        {
                            "name": "store",
                            "value": "Amazon"
                        }
                    ]
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2058
        },
        {
            "id": 32335811,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "sell_item_online",
                    "arguments": [
                        {
                            "name": "item",
                            "type": "string",
                            "desc": "The item to sell"
                        },
                        {
                            "name": "store",
                            "type": "string",
                            "desc": "The online store to sell the item at, eg. Amazon, Ebay, Taobao etc."
                        }
                    ]
                }
            ],
            "instruction": "I have a pair of Nike Air Max 90 sneakers that I no longer need and thought someone else might benefit from them. Can you assist me in listing them for sale on Amazon, please?",
            "tool_steps": [
                "Step 1: Invoke the sell_item_online function with parameters being item: 'Nike Air Max 90 sneakers' and store: 'Amazon'"
            ],
            "tool_nodes": [
                {
                    "task": "sell_item_online",
                    "arguments": [
                        {
                            "name": "item",
                            "value": "Nike Air Max 90 sneakers"
                        },
                        {
                            "name": "store",
                            "value": "Amazon"
                        }
                    ]
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2059
        },
        {
            "id": 26051009,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "sell_item_online",
                    "arguments": [
                        {
                            "name": "item",
                            "type": "string",
                            "desc": "The item to sell"
                        },
                        {
                            "name": "store",
                            "type": "string",
                            "desc": "The online store to sell the item at, eg. Amazon, Ebay, Taobao etc."
                        }
                    ]
                }
            ],
            "instruction": "I have an iPhone 13 that I no longer need, and I was thinking of selling it. Can you assist me in listing this item on Amazon?",
            "tool_steps": [
                "Initiate the process of selling the iPhone 13 via Amazon by using the sell_item_online API."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "item",
                            "value": "iPhone 13"
                        },
                        {
                            "name": "store",
                            "value": "Amazon"
                        }
                    ],
                    "task": "sell_item_online"
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2060
        },
        {
            "id": 30107006,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "daily_bill_payment",
                    "arguments": [
                        {
                            "name": "bill",
                            "type": "string",
                            "desc": "The bill to pay, eg. electricity, water, gas, phone, internet etc."
                        }
                    ]
                }
            ],
            "instruction": "I've been quite busy today and haven't had a chance to take care of my bills. Could you help me by paying my electricity bill?",
            "tool_steps": [
                "Step 1: Invoke the daily_bill_payment utility with the bill_type set as 'electricity'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "bill_type",
                            "value": "electricity"
                        }
                    ],
                    "task": "daily_bill_payment"
                }
            ],
            "category": "finance",
            "synthetic": false,
            "my_id": 2061
        },
        {
            "id": 18012788,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "daily_bill_payment",
                    "arguments": [
                        {
                            "name": "bill",
                            "type": "string",
                            "desc": "The bill to pay, eg. electricity, water, gas, phone, internet etc."
                        }
                    ]
                }
            ],
            "instruction": "It's been a busier month than usual and I almost forgot about my utility payments. Could you help me pay my electricity bill using the API we have at hand?",
            "tool_steps": [
                "Step 1: Invoke the daily_bill_payment API to settle the electricity bill."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "bill",
                            "value": "electricity bill"
                        }
                    ],
                    "task": "daily_bill_payment"
                }
            ],
            "category": "finance",
            "synthetic": false,
            "my_id": 2062
        },
        {
            "id": 18874441,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "play_music_by_title",
                    "arguments": [
                        {
                            "name": "title",
                            "type": "string",
                            "desc": "The title of the music to play"
                        }
                    ]
                }
            ],
            "instruction": "I've had a long day and I love the calming tunes of John Lennon. Could you please play 'Imagine' for me?",
            "tool_steps": [
                "Step 1: Call play_music_by_title_and_artist API with title: 'Imagine' and artist: 'John Lennon'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "title",
                            "value": "Imagine"
                        },
                        {
                            "name": "artist",
                            "value": "John Lennon"
                        }
                    ],
                    "task": "play_music_by_title_and_artist"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2064
        },
        {
            "id": 29667353,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "play_music_by_title",
                    "arguments": [
                        {
                            "name": "title",
                            "type": "string",
                            "desc": "The title of the music to play"
                        }
                    ]
                }
            ],
            "instruction": "I'm in the mood for some classic rock. Could you play 'Bohemian Rhapsody' for me, please?",
            "tool_steps": [
                "Step 1: Invoke the play_music_by_title function with title set as 'Bohemian Rhapsody'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "title",
                            "value": "Bohemian Rhapsody"
                        }
                    ],
                    "task": "play_music_by_title"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2065
        },
        {
            "id": 67618547,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "play_music_by_title",
                    "arguments": [
                        {
                            "name": "title",
                            "type": "string",
                            "desc": "The title of the music to play"
                        }
                    ]
                }
            ],
            "instruction": "I'm having a quiet evening at home and feeling nostalgic. Do you think you could play 'Imagine' by John Lennon for me?",
            "tool_steps": [
                "Step 1: Invoke the play_music_by_title_artist API with parameters: title 'Imagine' and artist 'John Lennon'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "title",
                            "value": "Imagine"
                        },
                        {
                            "name": "artist",
                            "value": "John Lennon"
                        }
                    ],
                    "task": "play_music_by_title_artist"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2066
        },
        {
            "id": 24443716,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "recording_audio",
                    "arguments": [
                        {
                            "name": "content",
                            "type": "string",
                            "desc": "The content of the audio"
                        }
                    ]
                }
            ],
            "instruction": "So I'm a writer and I was working late last night drafting some ideas. I tend to forget things when I don't record them. Do you think you could help me record an audio for one of my ideas entitled 'A Walk in the Park'?",
            "tool_steps": [
                "Step 1: Activate the recording_audio feature for the idea titled 'A Walk in the Park'"
            ],
            "tool_nodes": [
                {
                    "task": "recording_audio",
                    "arguments": [
                        {
                            "name": "content",
                            "value": "A Walk in the Park"
                        }
                    ]
                }
            ],
            "category": "data",
            "synthetic": false,
            "my_id": 2067
        },
        {
            "id": 19138956,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "recording_audio",
                    "arguments": [
                        {
                            "name": "content",
                            "type": "string",
                            "desc": "The content of the audio"
                        }
                    ]
                }
            ],
            "instruction": "I've been tasked with creating an audio file for a project. Can you help me record an audio file named 'example.wav'?",
            "tool_steps": [
                "Step 1: Invoke recording_audio with the argument 'This is a sample recording for the 'example.wav' file'."
            ],
            "tool_nodes": [
                {
                    "task": "recording_audio",
                    "arguments": [
                        {
                            "name": "content",
                            "value": "This is a sample recording for the 'example.wav' file."
                        }
                    ]
                }
            ],
            "category": "data",
            "synthetic": false,
            "my_id": 2068
        },
        {
            "id": 26872374,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "send_email",
                    "arguments": [
                        {
                            "name": "email_address",
                            "type": "string",
                            "desc": "The email address to send the email to"
                        },
                        {
                            "name": "content",
                            "type": "string",
                            "desc": "The content of the email"
                        }
                    ]
                }
            ],
            "instruction": "I'm knee deep in work and forgot to send over an attached file to a colleague. Can you help me? I'd love to forward an email to 'example@example.com' with 'example.jpg' and mention in the body 'Please find the attached example.jpg file.'",
            "tool_steps": [
                "Step 1: Use the send_email function. Input the email address 'example@example.com', the content 'Please find the attached example.jpg file.' and add 'example.jpg' as an attachment."
            ],
            "tool_nodes": [
                {
                    "task": "send_email",
                    "arguments": [
                        {
                            "name": "email_address",
                            "value": "example@example.com"
                        },
                        {
                            "name": "content",
                            "value": "Please find the attached example.jpg file."
                        },
                        {
                            "name": "attachment",
                            "value": "example.jpg"
                        }
                    ]
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2069
        },
        {
            "id": 37983213,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "send_email",
                    "arguments": [
                        {
                            "name": "email_address",
                            "type": "string",
                            "desc": "The email address to send the email to"
                        },
                        {
                            "name": "content",
                            "type": "string",
                            "desc": "The content of the email"
                        }
                    ]
                }
            ],
            "instruction": "I've just finished drafting an important message that I need to send to a colleague at example.email@example.com. The message is 'Hello world!'. Can you email this for me?",
            "tool_steps": [
                "Initiate the send_email task with email_address set as 'example.email@example.com' and content as 'Hello World!'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "email_address",
                            "value": "example.email@example.com"
                        },
                        {
                            "name": "content",
                            "value": "Hello World!"
                        }
                    ],
                    "task": "send_email"
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2070
        },
        {
            "id": 26786298,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "auto_driving_to_destination",
                    "arguments": [
                        {
                            "name": "destination",
                            "type": "string",
                            "desc": "The destination to drive to"
                        }
                    ]
                }
            ],
            "instruction": "I've got a meeting at 123 Main St and I am currently occupied with something else. Can my car drive itself there without my help?",
            "tool_steps": [
                "Step 1: Enable auto-driving mode with the destination set to '123 Main St' via the auto_driving_to_destination API"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "destination",
                            "value": "123 Main St"
                        }
                    ],
                    "task": "auto_driving_to_destination"
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2072
        },
        {
            "id": 23497048,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "auto_driving_to_destination",
                    "arguments": [
                        {
                            "name": "destination",
                            "type": "string",
                            "desc": "The destination to drive to"
                        }
                    ]
                }
            ],
            "instruction": "I got caught up in a meeting and I couldn't get out of it. Could you guide the autonomous car to park at the destination - 123 Example St?",
            "tool_steps": [
                "Step 1: Initiate auto_drive function to destination: \u2018123 Example St'"
            ],
            "tool_nodes": [
                {
                    "task": "auto_driving_to_destination",
                    "arguments": [
                        {
                            "name": "destination",
                            "value": "123 Example St"
                        }
                    ]
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2073
        },
        {
            "id": 32431840,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "auto_driving_to_destination",
                    "arguments": [
                        {
                            "name": "destination",
                            "type": "string",
                            "desc": "The destination to drive to"
                        }
                    ]
                }
            ],
            "instruction": "I'm having a busy day and I need my car to navigate to 123 Main St on its own. Can you help with that?",
            "tool_steps": [
                "Step 1: Initiate the auto_driving_to_destination protocol with the destination set as '123 Main St'"
            ],
            "tool_nodes": [
                {
                    "task": "auto_driving_to_destination",
                    "arguments": [
                        {
                            "name": "destination",
                            "value": "123 Main St"
                        }
                    ]
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2074
        },
        {
            "id": 16748333,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "apply_for_passport",
                    "arguments": [
                        {
                            "name": "country",
                            "type": "string",
                            "desc": "The country to apply for the passport for"
                        }
                    ]
                }
            ],
            "instruction": "I'm planning a trip to Australia and need a passport. Can you help me apply for one?",
            "tool_steps": [
                "Step 1: Initiate the apply_for_passport function, setting the 'country' parameter to 'Australia'"
            ],
            "tool_nodes": [
                {
                    "task": "apply_for_passport",
                    "arguments": [
                        {
                            "name": "country",
                            "value": "Australia"
                        }
                    ]
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2075
        },
        {
            "id": 42875542,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "apply_for_passport",
                    "arguments": [
                        {
                            "name": "country",
                            "type": "string",
                            "desc": "The country to apply for the passport for"
                        }
                    ]
                }
            ],
            "instruction": "I've been planning a trip to Canada and seems like I need a Canadian passport for this journey. Can you assist me with starting the passport application process?",
            "tool_steps": [
                "Step 1: Initiate the apply_for_passport API with the 'country' parameter set to 'Canada'"
            ],
            "tool_nodes": [
                {
                    "task": "apply_for_passport",
                    "arguments": [
                        {
                            "name": "country",
                            "value": "Canada"
                        }
                    ]
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2076
        },
        {
            "id": 31122290,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "borrow_book_online",
                    "arguments": [
                        {
                            "name": "book",
                            "type": "string",
                            "desc": "The book to borrow"
                        },
                        {
                            "name": "library",
                            "type": "string",
                            "desc": "The library to borrow the book from"
                        }
                    ]
                }
            ],
            "instruction": "I'm planning to do some reading this weekend and I'm interested in the book 'To Kill a Mockingbird'. Can you help me to borrow it from the Central Library?",
            "tool_steps": [
                "Step 1: Initiate the borrow_book_online API with book parameter as 'To Kill a Mockingbird' and library parameter as 'Central Library'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "book",
                            "value": "To Kill a Mockingbird"
                        },
                        {
                            "name": "library",
                            "value": "Central Library"
                        }
                    ],
                    "task": "borrow_book_online"
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2077
        },
        {
            "id": 19970135,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "borrow_book_online",
                    "arguments": [
                        {
                            "name": "book",
                            "type": "string",
                            "desc": "The book to borrow"
                        },
                        {
                            "name": "library",
                            "type": "string",
                            "desc": "The library to borrow the book from"
                        }
                    ]
                }
            ],
            "instruction": "I've been longing to read 'The Catcher in the Rye', can you help me borrow it from the Main Library?",
            "tool_steps": [
                "Step 1: Initiate the borrow_book_online process with the query book as 'The Catcher in the Rye' and selected library as the 'Main Library'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "book",
                            "value": "The Catcher in the Rye"
                        },
                        {
                            "name": "library",
                            "value": "Main Library"
                        }
                    ],
                    "task": "borrow_book_online"
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2078
        },
        {
            "id": 84639193,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "consult_lawyer_online",
                    "arguments": [
                        {
                            "name": "issue",
                            "type": "string",
                            "desc": "The legal issue to consult the lawyer for"
                        },
                        {
                            "name": "lawyer",
                            "type": "string",
                            "desc": "The lawyer to consult"
                        }
                    ]
                }
            ],
            "instruction": "I'm currently dealing with a lease agreement dispute and need some legal advice. Can you arrange an online consultation with my lawyer, John Smith, for me?",
            "tool_steps": [
                "Invoke the consult_lawyer_online API with 'Lease agreement dispute' as the issue and 'John Smith' as the lawyer."
            ],
            "tool_nodes": [
                {
                    "task": "consult_lawyer_online",
                    "arguments": [
                        {
                            "name": "issue",
                            "value": "Lease agreement dispute"
                        },
                        {
                            "name": "lawyer",
                            "value": "John Smith"
                        }
                    ]
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2080
        },
        {
            "id": 19595713,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "consult_lawyer_online",
                    "arguments": [
                        {
                            "name": "issue",
                            "type": "string",
                            "desc": "The legal issue to consult the lawyer for"
                        },
                        {
                            "name": "lawyer",
                            "type": "string",
                            "desc": "The lawyer to consult"
                        }
                    ]
                }
            ],
            "instruction": "I'm contemplating setting up a small business in California, however, there are numerous legal aspects to consider that I'm not fully aware of. Could you assist me by arranging an online consultation with a lawyer named John Doe who specializes in this matter?",
            "tool_steps": [
                "Step 1: Invoke the consult_lawyer_online API with the issue about understanding the legal aspects of setting up a small business in California and specify the lawyer as John Doe"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "issue",
                            "value": "Assistance needed in understanding the legalities involved in establishing a small-size business in California"
                        },
                        {
                            "name": "lawyer",
                            "value": "John Doe"
                        }
                    ],
                    "task": "consult_lawyer_online"
                }
            ],
            "category": "business_and_productivity",
            "synthetic": false,
            "my_id": 2081
        },
        {
            "id": 29086243,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "book_restaurant",
                    "arguments": [
                        {
                            "name": "date",
                            "type": "date",
                            "desc": "The date to book the restaurant for"
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "desc": "The name of the restaurant to book"
                        }
                    ]
                }
            ],
            "instruction": "I'm planning a dinner at Pizza Palace for a special occasion on October 15, 2022. Could you help me secure a reservation?",
            "tool_steps": [
                "Initiate the book_restaurant API with the specified date: '2022-10-15' and restaurant name: 'Pizza Palace'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "date",
                            "value": "2022-10-15"
                        },
                        {
                            "name": "name",
                            "value": "Pizza Palace"
                        }
                    ],
                    "task": "book_restaurant"
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2082
        },
        {
            "id": 17486668,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "book_restaurant",
                    "arguments": [
                        {
                            "name": "date",
                            "type": "date",
                            "desc": "The date to book the restaurant for"
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "desc": "The name of the restaurant to book"
                        }
                    ]
                }
            ],
            "instruction": "I am planning a party. Can you help me reserve a table at Pizza Hut for July 25, 2023?",
            "tool_steps": [
                "Step 1: Invoke the book_restaurant function with 'Pizza Hut' as the restaurant name and '2023-07-25' as the date."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "date",
                            "value": "2023-07-25"
                        },
                        {
                            "name": "name",
                            "value": "Pizza Hut"
                        }
                    ],
                    "task": "book_restaurant"
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2083
        },
        {
            "id": 18447706,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "book_restaurant",
                    "arguments": [
                        {
                            "name": "date",
                            "type": "date",
                            "desc": "The date to book the restaurant for"
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "desc": "The name of the restaurant to book"
                        }
                    ]
                }
            ],
            "instruction": "I have my heart set on having pizza at Pizza Palace for my anniversary dinner on May 15, 2023. Can you help me ensure a table is available?",
            "tool_steps": [
                "Step 1: Invoke the book_restaurant API with the specified date '2023-05-15' and restaurant 'Pizza Palace' to schedule the reservation."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "date",
                            "value": "2023-05-15"
                        },
                        {
                            "name": "name",
                            "value": "Pizza Palace"
                        }
                    ],
                    "task": "book_restaurant"
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2084
        },
        {
            "id": 12883055,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "deliver_package",
                    "arguments": [
                        {
                            "name": "package",
                            "type": "string",
                            "desc": "The package to deliver"
                        },
                        {
                            "name": "destination",
                            "type": "string",
                            "desc": "The destination to deliver the package to"
                        }
                    ]
                }
            ],
            "instruction": "I've got this digital file named 'example.jpg' that I need to send off to a place located at 123 Main Street. Can you arrange for the delivery, please?",
            "tool_steps": [
                "Step 1: Invoke the deliver_package function with 'example.jpg' as the package to be delivered and '123 Main Street' as the delivery address."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "package",
                            "value": "example.jpg"
                        },
                        {
                            "name": "destination",
                            "value": "123 Main Street"
                        }
                    ],
                    "task": "deliver_package"
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2085
        },
        {
            "id": 13223492,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "deliver_package",
                    "arguments": [
                        {
                            "name": "package",
                            "type": "string",
                            "desc": "The package to deliver"
                        },
                        {
                            "name": "destination",
                            "type": "string",
                            "desc": "The destination to deliver the package to"
                        }
                    ]
                }
            ],
            "instruction": "I just finished a photograph and saved it as example.jpg. I promised to send this to a friend living at 123 Main St. Can you help me send this out?",
            "tool_steps": [
                "Initiate the deliver_package system. Ensure to send 'example.jpg' and the delivery address should be '123 Main St."
            ],
            "tool_nodes": [
                {
                    "task": "deliver_package",
                    "arguments": [
                        {
                            "name": "package",
                            "value": "example.jpg"
                        },
                        {
                            "name": "destination",
                            "value": "123 Main St"
                        }
                    ]
                }
            ],
            "category": "travel_and_transportation",
            "synthetic": false,
            "my_id": 2086
        },
        {
            "id": 21376967,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "send_sms",
                    "arguments": [
                        {
                            "name": "phone_number",
                            "type": "string",
                            "desc": "The phone number to send the sms to"
                        },
                        {
                            "name": "content",
                            "type": "string",
                            "desc": "The content of the sms"
                        }
                    ]
                }
            ],
            "instruction": "I've just come up with a brilliant idea while I was working and I don't want to forget it. Could you send a text message to my number 1234567890, saying 'Hi, don't forget about the new project idea'?",
            "tool_steps": [
                "Intiate the send_sms function with the phone_number set as '1234567890' and the content as 'Hi, don't forget about the new project idea'"
            ],
            "tool_nodes": [
                {
                    "task": "send_sms",
                    "arguments": [
                        {
                            "name": "phone_number",
                            "value": "1234567890"
                        },
                        {
                            "name": "content",
                            "value": "Hi, don't forget about the new project idea"
                        }
                    ]
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2087
        },
        {
            "id": 23370159,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "send_sms",
                    "arguments": [
                        {
                            "name": "phone_number",
                            "type": "string",
                            "desc": "The phone number to send the sms to"
                        },
                        {
                            "name": "content",
                            "type": "string",
                            "desc": "The content of the sms"
                        }
                    ]
                }
            ],
            "instruction": "I am a product delivery manager, and one of our customers' packages is on the way for delivery today. Could you assist me in alerting them via SMS to phone number '+1234567890'?",
            "tool_steps": [
                "Step 1: Invoke the send_sms API with the phone number '+1234567890' and compose a text 'Dear customer, just to inform you that your package is on delivery today. Please prepare to receive it.'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "phone_number",
                            "value": "+1234567890"
                        },
                        {
                            "name": "content",
                            "value": "Dear customer, just to inform you that your package is on delivery today. Please prepare to receive it."
                        }
                    ],
                    "task": "send_sms"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2088
        },
        {
            "id": 49246797,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "buy_insurance",
                    "arguments": [
                        {
                            "name": "insurance",
                            "type": "string",
                            "desc": "The insurance to buy"
                        },
                        {
                            "name": "company",
                            "type": "string",
                            "desc": "The insurance company to buy the insurance from"
                        }
                    ]
                }
            ],
            "instruction": "I've been thinking about having a safety net against medical costs. Could you help me get a Health Insurance policy from ABC Insurances?",
            "tool_steps": [
                "Step 1: Initiate a request to buy_insurance API with insurance type: 'Health Insurance' and the specified insurance company: 'ABC Insurances'"
            ],
            "tool_nodes": [
                {
                    "task": "buy_insurance",
                    "arguments": [
                        {
                            "name": "insurance",
                            "value": "Health Insurance"
                        },
                        {
                            "name": "company",
                            "value": "ABC Insurances"
                        }
                    ]
                }
            ],
            "category": "finance",
            "synthetic": false,
            "my_id": 2090
        },
        {
            "id": 95171947,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "buy_insurance",
                    "arguments": [
                        {
                            "name": "insurance",
                            "type": "string",
                            "desc": "The insurance to buy"
                        },
                        {
                            "name": "company",
                            "type": "string",
                            "desc": "The insurance company to buy the insurance from"
                        }
                    ]
                }
            ],
            "instruction": "I am considering taking out a health insurance policy. Can Best Insurance Co. help me with this opportunity?",
            "tool_steps": [
                "Step 1: Initiate purchase_insurance API with details - insurance type: 'Health Insurance' and company: 'Best Insurance Co.'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "insurance",
                            "value": "Health Insurance"
                        },
                        {
                            "name": "company",
                            "value": "Best Insurance Co."
                        }
                    ],
                    "task": "buy_insurance"
                }
            ],
            "category": "finance",
            "synthetic": false,
            "my_id": 2091
        },
        {
            "id": 24723563,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "share_by_social_network",
                    "arguments": [
                        {
                            "name": "content",
                            "type": "string",
                            "desc": "The content to share"
                        },
                        {
                            "name": "social_network",
                            "type": "string",
                            "desc": "The social network to share the content by, eg. Wechat, Facebook, Twitter, Weibo etc."
                        }
                    ]
                }
            ],
            "instruction": "I just took this really stunning photograph called 'example.jpg' that I think my Facebook friends would love. Can you help me share it there?",
            "tool_steps": [
                "Step 1: Invoke 'share_by_social_network' API with content: 'I just captured an exquisite snapshot, hoping you all will adore it: example.jpg' and social_network: 'Facebook'"
            ],
            "tool_nodes": [
                {
                    "task": "share_by_social_network",
                    "arguments": [
                        {
                            "name": "content",
                            "value": "I just captured an exquisite snapshot, hoping you all will adore it: example.jpg"
                        },
                        {
                            "name": "social_network",
                            "value": "Facebook"
                        }
                    ]
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2092
        },
        {
            "id": 20896755,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "share_by_social_network",
                    "arguments": [
                        {
                            "name": "content",
                            "type": "string",
                            "desc": "The content to share"
                        },
                        {
                            "name": "social_network",
                            "type": "string",
                            "desc": "The social network to share the content by, eg. Wechat, Facebook, Twitter, Weibo etc."
                        }
                    ]
                }
            ],
            "instruction": "I've taken a fantastic picture and saved it as 'example.jpg'. Could you help me create a post on Facebook to show it off?",
            "tool_steps": [
                "Step 1: Trigger 'share_by_social_network' API with 'content' as 'Just took this amazing photo! Check it out, 'example.jpg'!' and 'social_network' as 'Facebook'"
            ],
            "tool_nodes": [
                {
                    "task": "share_by_social_network",
                    "arguments": [
                        {
                            "name": "content",
                            "value": "Just took this amazing photo! Check it out, 'example.jpg'!"
                        },
                        {
                            "name": "social_network",
                            "value": "Facebook"
                        }
                    ]
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2093
        },
        {
          "id": 13223493,
          "n_tools": 1,
          "sampled_nodes": [
              {
                  "task": "deliver_package",
                  "arguments": [
                      {
                          "name": "package",
                          "type": "string",
                          "desc": "The package to deliver"
                      },
                      {
                          "name": "destination",
                          "type": "string",
                          "desc": "The destination to deliver the package to"
                      }
                  ]
              }
          ],
          "instruction": "This vase needs to get to my friend for his birthday. Please send 'my_package' to him at 123 Main St",
          "tool_steps": [
              "Initiate the deliver_package system. Ensure to send 'my_package' to the delivery address should be '123 Main St."
          ],
          "tool_nodes": [
              {
                  "task": "deliver_package",
                  "arguments": [
                      {
                          "name": "package",
                          "value": "my_package"
                      },
                      {
                          "name": "destination",
                          "value": "123 Main St"
                      }
                  ]
              }
          ],
          "category": "travel_and_transportation",
          "synthetic": false,
          "my_id": 2094
        },
        {
            "id": 14288542,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "get_news_for_topic",
                    "arguments": [
                        {
                            "name": "topic",
                            "type": "string",
                            "desc": "The topic to get the news for"
                        }
                    ]
                }
            ],
            "instruction": "I'm trying to understand the current conversations around climate change happening around the world. Could you find some recent news articles on this topic for me?",
            "tool_steps": [
                "Step 1: Invoke get_news_for_topic function with the subject being 'Climate Change'"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "topic",
                            "value": "Climate Change"
                        }
                    ],
                    "task": "get_news_for_topic"
                }
            ],
            "category": "data",
            "synthetic": false,
            "my_id": 2095
        },
        {
            "id": 25506235,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "get_news_for_topic",
                    "arguments": [
                        {
                            "name": "topic",
                            "type": "string",
                            "desc": "The topic to get the news for"
                        }
                    ]
                }
            ],
            "instruction": "I've been trying to keep up with advancements in the tech world, specifically about Artificial Intelligence. Could you get me the most recent news articles on this topic?",
            "tool_steps": [
                "Invoke the 'get_news_for_topic' API, using 'Artificial Intelligence' as the input for the 'topic' parameter."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "topic",
                            "value": "Artificial Intelligence"
                        }
                    ],
                    "task": "get_news_for_topic"
                }
            ],
            "category": "data",
            "synthetic": false,
            "my_id": 2096
        },
        {
            "id": 30644005,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "get_news_for_topic",
                    "arguments": [
                        {
                            "name": "topic",
                            "type": "string",
                            "desc": "The topic to get the news for"
                        }
                    ]
                }
            ],
            "instruction": "I'm interested in staying on top of the tech industry. Could you provide me with the latest news articles about technology?",
            "tool_steps": [
                "Step 1: Invoke the get_news_for_topic function with 'technology' as the topic"
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "topic",
                            "value": "technology"
                        }
                    ],
                    "task": "get_news_for_topic"
                }
            ],
            "category": "data",
            "synthetic": false,
            "my_id": 2097
        },
        {
            "id": 61358930,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "take_note",
                    "arguments": [
                        {
                            "name": "content",
                            "type": "string",
                            "desc": "The content of the note"
                        }
                    ]
                }
            ],
            "instruction": "I am awfully forgetful these days. Can you help me out by saving this note 'Remember to do grocery shopping tonight'?",
            "tool_steps": [
                "Initiate the take_note API with the message: 'Remember to do grocery shopping tonight.'"
            ],
            "tool_nodes": [
                {
                    "task": "take_note",
                    "arguments": [
                        {
                            "name": "content",
                            "value": "Remember to do grocery shopping tonight."
                        }
                    ]
                }
            ],
            "category": "data",
            "synthetic": false,
            "my_id": 2098
        },
        {
            "id": 81922715,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "take_note",
                    "arguments": [
                        {
                            "name": "content",
                            "type": "string",
                            "desc": "The content of the note"
                        }
                    ]
                }
            ],
            "instruction": "With the evening coming up quickly, I'm starting to plan dinner for tonight. Can you remind me to buy milk, eggs, and bread when I go to the grocery store?",
            "tool_steps": [
                "Step 1: Invoke take_note API, adding a reminder to buy milk, eggs, and bread at the grocery store"
            ],
            "tool_nodes": [
                {
                    "task": "take_note",
                    "arguments": [
                        {
                            "name": "content",
                            "value": "Remember to buy milk, eggs, and bread at the grocery store"
                        }
                    ]
                }
            ],
            "category": "data",
            "synthetic": false,
            "my_id": 2099
        },
        {
          "id": 81922716,
          "n_tools": 1,
          "sampled_nodes": [
              {
                  "task": "take_note",
                  "arguments": [
                      {
                          "name": "content",
                          "type": "string",
                          "desc": "The content of the note"
                      }
                  ]
              }
          ],
          "instruction": "I just found out which books i want to read next! Save this list for me: Harry Potter 4, Karl Marx and the The devil wears Prada",
          "tool_steps": [
              "Step 1: Invoke take_note API, adding a books-to-read list with: Harry Potter 4, Karl Marx and the The devil wears Prada"
          ],
          "tool_nodes": [
              {
                  "task": "take_note",
                  "arguments": [
                      {
                          "name": "content",
                          "value": "Books I want to read: Harry Potter 4, Karl Marx and the The devil wears Prada"
                      }
                  ]
              }
          ],
          "category": "data",
          "synthetic": false,
          "my_id": 2100
        },
        {
            "id": 13699070,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "attend_meeting_online",
                    "arguments": [
                        {
                            "name": "topic",
                            "type": "string",
                            "desc": "The topic of the meeting"
                        }
                    ]
                }
            ],
            "instruction": "I am looking forward to having a productive meeting about 'Machine Learning'. Can you help me smoothly attend this crucial online meeting?",
            "tool_steps": [
                "Step 1: Initiate the attend_meeting_online API with the discussion topic set to 'Machine Learning'."
            ],
            "tool_nodes": [
                {
                    "arguments": [
                        {
                            "name": "topic",
                            "value": "Machine Learning"
                        }
                    ],
                    "task": "attend_meeting_online"
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2101
        },
        {
            "id": 18297574,
            "n_tools": 1,
            "sampled_nodes": [
                {
                    "task": "attend_meeting_online",
                    "arguments": [
                        {
                            "name": "topic",
                            "type": "string",
                            "desc": "The topic of the meeting"
                        }
                    ]
                }
            ],
            "instruction": "I'm particularly involved with the topic of 'Climate Change Solutions' and a related online meeting is coming up. Can you help me attend this meeting?",
            "tool_steps": [
                "Step 1: Use the attend_meeting_online function with the topic set as 'Climate Change Solutions'"
            ],
            "tool_nodes": [
                {
                    "task": "attend_meeting_online",
                    "arguments": [
                        {
                            "name": "topic",
                            "value": "Climate Change Solutions"
                        }
                    ]
                }
            ],
            "category": "entertainment_and_media",
            "synthetic": false,
            "my_id": 2102
        }
      
]